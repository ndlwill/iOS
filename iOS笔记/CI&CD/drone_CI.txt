https://docs.drone.io/
https://www.drone.io/

==========Installation Guides
https://docs.drone.io/server/overview/

This section of the documentation will help you install and configure the Drone Server and one or many Runners. 
A runner is a standalone daemon that polls the server for pending pipelines to execute.

1.Server Installation
Drone integrates seamlessly with popular Source Control Management providers.

Gitea
This article explains how to install the Drone server for Gitea. 
The server is packaged as a minimal Docker image distributed on DockerHub.
https://hub.docker.com/r/drone/drone

Please note we strongly recommend installing Drone on a dedicated instance. 
We do not recommend installing Drone and Gitea on the same machine due to network complications, 
and we definitely do not recommend installing Drone and Gitea on the same machine using docker-compose.

(1)Preparation
Create an OAuth Application
Create a Gitea OAuth application. The Consumer Key and Consumer Secret are used to authorize access to Gitea resources.

The authorization callback URL must match the below format and path, and must use your exact server scheme and host.
https://drone.company.com/login

Create a Shared Secret:
Create a shared secret to authenticate communication between runners and your central Drone server.

You can use openssl to generate a shared secret:
$ openssl rand -hex 16

(2)Download
The Drone server is distributed as a lightweight Docker image. 
The image is self-contained and does not have any external dependencies. The latest tag will ensure the latest version of Drone.
$ docker pull drone/drone:2

(3)Configuration

The Drone server is configured using environment variables. 
This article references a subset of configuration options, defined below. See Configuration for a complete list of configuration options.
https://docs.drone.io/server/reference/

DRONE_GITEA_CLIENT_ID
Required string value provides your Gitea oauth Client ID.
DRONE_GITEA_CLIENT_SECRET
Required string value provides your Gitea oauth Client Secret.
DRONE_GITEA_SERVER
Required string value provides your Gitea server address. For example https://gitea.company.com, note the http(s) otherwise you’ll see an error with “unsupported protocol scheme” from Gitea.
DRONE_GIT_ALWAYS_AUTH
Optional boolean value configures Drone to authenticate when cloning public repositories.
DRONE_RPC_SECRET
Required string value provides the shared secret generated in the previous step. This is used to authenticate the rpc connection between the server and runners. The server and runner must be provided the same secret value.
DRONE_SERVER_HOST
Required string value provides your external hostname or IP address. If using an IP address you may include the port. For example drone.company.com.
DRONE_SERVER_PROTO
Required string value provides your external protocol scheme. This value should be set to http or https. This field defaults to https if you configure ssl or acme.

(4)Start the Server
The server container can be started with the below command. 
The container is configured through environment variables. For a full list of configuration parameters, please see the configuration reference.

docker run \
  --volume=/var/lib/drone:/data \
  --env=DRONE_GITEA_SERVER={{DRONE_GITEA_SERVER}} \
  --env=DRONE_GITEA_CLIENT_ID={{DRONE_GITEA_CLIENT_ID}} \
  --env=DRONE_GITEA_CLIENT_SECRET={{DRONE_GITEA_CLIENT_SECRET}} \
  --env=DRONE_RPC_SECRET={{DRONE_RPC_SECRET}} \
  --env=DRONE_SERVER_HOST={{DRONE_SERVER_HOST}} \
  --env=DRONE_SERVER_PROTO={{DRONE_SERVER_PROTO}} \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --detach=true \
  --name=drone \
  drone/drone:2

2.Runner Installation
Drone Runners are standalone daemons that poll the server for pending pipelines to execute. 
There are different types of runners optimized for different use cases and runtime environments. 
Once the server is successfully installed you must install one or more runners.

==========Examples by Programming Language