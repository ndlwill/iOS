# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# runner:
# gitlab-runner --debug --log-format text run

# ===start bash_profile===
# ===start profile===
# ===end profile===
# ===end bash_profile===

stages: # List of stages for jobs, and their order of execution
  - debug
  - build
  - test
  - deploy

variables:
  LANG: "en_US.UTF-8"
  GIT_CLONE_PATH: $CI_BUILDS_DIR/TestDemo

before_script:
  # - echo "=====before_script test cd====="
  # - cd DebugDir
  # - pwd # /Users/youdun-ndl/gitlab_builds/builds/TestDemo/DebugDir
  # - ls -la

  - echo "=====before_script env====="
  - echo $SHELL # /bin/zsh
  - pwd # /Users/youdun-ndl/gitlab_builds/builds/TestDemo
  - which bundle
  - which pod
  - command which rvm
  - echo "=====before_script====="
  - bundle install
  - bundle exec pod install

debug-job:
  stage: debug
  tags:
    - apple
  variables:
    DEBUG_JOB_VAR: "debug-job var"
  script:
    - echo "=====debug start====="
    - echo "variables = '$DEBUG_JOB_VAR'"
    - echo "PROJECT_DIR = $CI_PROJECT_DIR" # /Users/youdun-ndl/gitlab_builds/builds/TestDemo
    - echo "CI_BUILDS_DIR = $CI_BUILDS_DIR" # /Users/youdun-ndl/gitlab_builds/builds
    - echo "=====debug end====="

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 10 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job: # This job also runs in the test stage.
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job: # This job runs in the deploy stage.
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
