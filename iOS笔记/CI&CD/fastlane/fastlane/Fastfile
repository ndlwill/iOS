# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

XCWORKSPACE_NAME = "TestDemo.xcworkspace"
SCHEME = "TestDemo"


$APP_VERSION_NUMBER = ""

$APP_BUILD_NUMBER = ""

$BUILD_ARTIFACTS_EXPORT_PATH = "BuildArtifacts"

$GYM_RETURN_PATH = ""

default_platform(:ios)

platform :ios do

=begin
bundle exec fastlane build

Step: gym
$ xcodebuild -resolvePackageDependencies -workspace TestDemo.xcworkspace -scheme TestDemo -configuration Release
$ xcodebuild -showBuildSettings -workspace TestDemo.xcworkspace -scheme TestDemo -configuration Release 2>&1
Archive Succeeded
Successfully stored the archive. You can find it in the Xcode Organizer.
Successfully exported and compressed dSYM file
Successfully exported and signed the ipa file
=end
  desc "=====build====="
  lane :build do |options|
    puts "[lane :build] input options = #{options}"

    # 默认 app-store
    export_method = options[:export_method] ||= 'app-store'

    appIdentifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    puts "appIdentifier = #{appIdentifier}"

    build_time = Time.now.strftime("%Y-%m-%d %H-%M-%S")

    appTargetVersionNumber = get_version_number_from_xcodeproj(target: "TestDemo")
    appTargetBuildNumber = get_build_number_from_xcodeproj(target: "TestDemo")

    $APP_VERSION_NUMBER = appTargetVersionNumber
    $APP_BUILD_NUMBER = appTargetBuildNumber

    provisioning_profile_name = export_method == 'app-store' ? 'Dis-TestDemo' : 'Dev-TestDemo'
    
    $GYM_RETURN_PATH = gym(
      workspace: XCWORKSPACE_NAME, # Path to the workspace file
      scheme: SCHEME,
      clean: true,
      configuration: 'Release',
      output_directory: "#$BUILD_ARTIFACTS_EXPORT_PATH/ipa/#{SCHEME}_#{build_time}", # The directory in which the ipa file should be stored in. (默认值 = .)
      output_name: "#{SCHEME}_v#{$APP_VERSION_NUMBER}_b#{$APP_BUILD_NUMBER}_#{export_method}.ipa", # The name of the resulting ipa file
      buildlog_path: "#$BUILD_ARTIFACTS_EXPORT_PATH/buildlog", # The directory where to store the build log
      build_path: "#$BUILD_ARTIFACTS_EXPORT_PATH/build/#{SCHEME}_#{build_time}", # The directory in which the archive should be stored in
      archive_path: "#$BUILD_ARTIFACTS_EXPORT_PATH/archive/#{SCHEME}_#{build_time}", # The path to the created archive
      include_symbols: true,
      silent: true,
      export_options: { # By default gym creates this file for you and you are able to modify some parameters by using export_method, export_team_id, include_symbols or include_bitcode.
        method: "#{export_method}",
        provisioningProfiles: {
          appIdentifier => provisioning_profile_name # export_method为app-store，就需要Distribution的描述文件
        },
        thinning: "<none>" # Defaults to <none>
      }
    )

    UI.important "GYM_RETURN_PATH = #$GYM_RETURN_PATH"
  end
end
