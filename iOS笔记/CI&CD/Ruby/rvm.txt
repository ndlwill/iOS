$ \curl -sSL https://get.rvm.io | bash -s stable
$ source ~/.bashrc
$ source ~/.bash_profile

~/.rvm/rubies 是「运行环境」// 每个子目录对应一个完整的 Ruby 可执行环境。比如 ruby、irb、gem 这些命令行工具就来自于这些目录。
~/.rvm/gems 是「库环境」// 你安装 gem 的时候，它们实际上就是被放在这里
~/.rvm/rubies	Ruby 版本的编译安装目录	每个 Ruby 版本一个目录
~/.rvm/gems	Ruby 版本 + gemset 的 gem 安装内容	每个版本 + 每个 gemset 各自独立

rvm get <version>       # upgrade rvm: stable, master

rvm -v 

rvm current

rvm which <command>
rvm which gem
这是 RVM 提供的一个命令，用来显示当前 RVM 环境下，某个工具的真实可执行文件路径。


将 Mac 系统系统自带的 ruby 导入 rvm
rvm automount

查看 rvm 管理的本地 ruby 版本
rvm list
这里可以看到导入的系统 ruby 版本ext-ruby=2.6.3,我给系统ruby名称是ruby-2.6.3， rvm给自动加上 ext- 前缀

查看 rvm 可以安装的所有远程 ruby 版本
rvm list known

安装远程 ruby 版本
rvm install 2.6.6
安装完成之后使用 rvm list查看当前已安装 ruby 版本

切换 ruby 版本并设置为默认
rvm use ext-ruby-2.6.3 --default

卸载 ruby
rvm remove 2.6.6

==================================================sudo gem install cocoapods -v 1.12.0
建议使用gem install而不是sudo gem install，sudo gem install这个影响全局

gem env

安装完成后执行
/Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/pod -v

报错
/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/activesupport-7.1.3.2/lib/active_support/core_ext/array/conversions.rb:108:in `<class:Array>': undefined method `deprecator' for ActiveSupport:Module (NoMethodError)
Did you mean?  deprecate_constant
	from /Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/activesupport-7.1.3.2/lib/active_support/core_ext/array/conversions.rb:8:in `<top (required)>'
	from <internal:/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/site_ruby/3.0.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from <internal:/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/site_ruby/3.0.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from /Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.12.0/lib/cocoapods.rb:9:in `<top (required)>'
	from <internal:/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/site_ruby/3.0.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from <internal:/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/site_ruby/3.0.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from /Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.12.0/bin/pod:36:in `<top (required)>'
	from /Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/pod:23:in `load'
	from /Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/pod:23:in `<main>'
	from /Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/ruby_executable_hooks:22:in `eval'
	from /Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/ruby_executable_hooks:22:in `<main>'

echo $GEM_HOME
/Users/youdun-ndl/.rvm/gems/ruby-3.0.0



ruby-3.4.3@global
这是 RVM 为每个 Ruby 安装版本都自动创建的一个特殊的 gemset，用于存放 所有 gemset 都共享的 gem。
也就是说，安装在这个 gemset 里的 gem，会在你使用 ruby-3.4.3 下的其他所有 gemset（包括默认 gemset）时，都可以访问。

为什么不推荐用 sudo gem install？
会安装到全局环境，污染 Ruby 安装目录
无法被 gemset 控制和隔离
可能需要 root 权限不安全


非常重要
######
rvm中的gem使用gem还是sudo gem是有区别的
gem install安装的目录是.rvm/gems/ruby-3.0.0// 这个方式是 RVM 推荐的，不会污染系统环境，也不需要 root 权限。
sudo gem install安装的目录是.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems 也相当于 .rvm/gems目录下的ruby-3.0.0@global
所以下面的命令，如果使用sudo安装的 sudo gem install cocoapods -v 1.12.0
gem install 和 gem uninstall 都需要加上sudo
######


gem list
如果用的gem
/Users/youdun-ndl/.rvm/gems/ruby-3.0.0/bin/pod

sudo gem list
如果用的sudo gem
which pod
/Users/youdun-ndl/.rvm/rubies/ruby-3.0.0/bin/pod


这个是cocoapods的问题，后续版本可能没有
gem install activesupport -v 7.0.8
gem list
gem uninstall activesupport -v 不是7.0.8的版本
pod --version