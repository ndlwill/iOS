iOS doesn’t let you record a packet trace directly.
However, you can use your Mac to record a packet trace on an attached iOS device using the Remote Virtual Interface (RVI) mechanism.
To get started, first connect your iOS device to your Mac via USB. Next run the rvictl command in Terminal.

rvictl -s b0e8fe73db17d4993bd549418bfbdba70a4af2b1

rvictl is the name of the command that manipulates RVIs.

-s tells rvictl to set up a new RVI.

b0e8fe73db17d4993bd549418bfbdba70a4af2b1 is the UDID of the iOS device to target. This UDID is just an example; you can find your device’s UDID in the Devices and Simulators window in Xcode.

$ rvictl -s b0e8fe73db17d4993bd549418bfbdba70a4af2b1
Starting device b0e8fe73db17d4993bd549418bfbdba70a4af2b1 [SUCCEEDED] with interface rvi0

This output includes the interface name of the newly-created RVI, rvi0 in this example.
Supply this interface name to your favorite packet trace tool to record a trace of the traffic on your iOS device.
For example, use the following command to record a packet trace on rvi0 and write it to trace.pcap.

sudo tcpdump -i rvi0 -w trace.pcap

Display and Filter iOS Interface Information:
An RVI represents the entire networking stack of the iOS device;
you cannot target a specific interface on the device as you would on the Mac.
However, information about the interface is recorded in the packet metadata.
You can use your packet trace tool to display the interface for each packet and filter the trace based on that interface.
For the tcpdump tool, use the -k option to display packet metadata and tcpdump -Q to filter on it. The tcpdump man page has the details;
https://developer.apple.com/documentation/os/reading-unix-manual-pages

man tcpdump