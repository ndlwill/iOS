ECN（Explicit Congestion Notification）机制

Recording a Packet Trace：
"pcap" 是 "Packet Capture" 的缩写
抓包
10:26:22.212019 IP 192.168.254.243.65088 > 10.111.245.77.8443: Flags [SEW], seq 454833073, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 3446471822 ecr 0,sackOK,eol], length 0

客户端 Flags [SEW] // 表示这是一个TCP SYN 握手包，同时客户端还支持**显式拥塞通知（ECN）**机制，用于更智能地处理网络拥塞情况。
S: SYN（同步）
E: ECN-Echo（Explicit Congestion Notification）
W: CWR（Congestion Window Reduced）

win 65535
TCP 接收窗口大小（Window Size），表示接收方可以缓存的最大数据字节数。
这里是 65535 字节，表示这是个最大未缩放窗口值（后面还有 window scaling）

TCP 选项字段，用于优化连接特性：
wscale 6：窗口缩放因子是 2^6 = 64，用于扩大窗口大小（真实窗口大小 = 65535 * 64）。
sackOK：支持 SACK（选择性确认），有利于丢包恢复。
eol：选项结束（End of Option List）

length 0
数据部分长度为 0，也就是说这个包只是 TCP 握手的 SYN 包，不包含实际的数据载荷。




E	ECE	ECN Echo	显式拥塞通知的一部分，表示收到过拥塞标志
当主机支持 ECN 并且收到对端发来的 ECN Congestion Experienced（CE）标志的 IP 包时，它会设置 ECE。
在 TCP 三次握手时，如果客户端发送了 SYN 并带有 ECE 标志，表示：我支持 ECN 功能

W	CWR	Congestion Window Reduced	表示已响应对端的 ECN 拥塞通
当 TCP 接收方检测到网络拥塞（通过 ECN 标志位），它会用 ECE 通知发送方
然后发送方设置 CWR 标志，表示：“我已经知道你报告的网络拥塞，我已经做出响应了，比如收缩了发送窗口。”

但在 SYN 包中出现 CWR 的情况稍微特殊，它的含义是：
客户端在三次握手时表示：“我支持 ECN（并且我知道如何处理网络拥塞响应）。”
#####
所以 SYN + ECE + CWR 是典型的启用 ECN 的握手包。
#####



ECN 是一种优化机制，用来在不丢包的情况下通告网络拥塞；
它需要双方都支持，并且底层网络设备（比如路由器）也要支持；




ECN 是什么？
传统 TCP 拥塞控制依赖丢包来判断网络是否拥塞（比如 Fast Retransmit），但丢包成本高。
ECN 提供了一种“不丢包就能检测拥塞”的机制。


原理：
路由器（或交换机）检测到网络即将拥塞，不直接丢包；
它把 IP 包头中的 ECN 位设置为 CE（Congestion Experienced）；
接收端收到这个 CE 位的包后，会在下次的 TCP ACK 中设置 ECE 标志位；
发送端看到这个 ECE 后，做出反应（比如收缩窗口），并设置 CWR 表示“我知道了”。


设置 IP 头中的 ECN 为 CE（Congestion Experienced）这一动作，是由网络中的路由器或交换机来完成的，而不是发包的终端系统（比如客户端电脑）设置的

谁设置？	设置什么？	说明
发送端系统	IP 头 ECN 位设为 ECT(0) 或 ECT(1)	表示“我支持 ECN，可以处理拥塞通知”
路由器/交换机	如果发现队列快满，则把 ECN 改成 CE（Congestion Experienced）	表示“我看到拥塞了”//  路由器或交换机自身的 转发队列（egress queue）快满
接收端系统	收到带 CE 的包后，在 TCP ACK 里设置 ECE	通知发送端“有拥塞”
发送端系统	收到 ECE，设置 TCP CWR，减小拥塞窗口	表示“我已经知道有拥塞，并做出响应”

[客户端发起连接]
  |
  | -- IP: ECN=ECT(0) -->  
  |                     [路由器看到网络即将拥塞]
  |                     修改 IP ECN 为 CE
  |                     ↓
  | <-- IP: ECN=CE --  
  |
[服务端收到包，TCP 回复 ACK + ECE]
  |
  | <-- TCP ACK + ECE --
  |
[客户端看到 ECE → 设置 TCP CWR → 收缩发送窗口]


IP头中有一个叫 DS Field（Differentiated Services Field）的 8 位字段，其中：
前 6 位是 DSCP（区分服务代码点）
后 2 位就是 ECN 位

ECN 位值	二进制	名称	含义
00	00	Not ECN-Capable Transport (Not-ECT)	不支持 ECN，传统丢包方式
01	01	ECN Capable Transport (ECT(1))	支持 ECN，可以用于 ECN 标记
10	10	ECN Capable Transport (ECT(0))	支持 ECN，含义与 ECT(1) 相同，只是区分用途
11	11	Congestion Experienced (CE)	拥塞已发生，这是路由器/交换机设置的标志

00：默认情况，大部分普通流量都用这个。表示“不使用 ECN”，只能靠丢包感知拥塞。
01 和 10（即 ECT(1) 和 ECT(0)）：
由发送方设置，用来表明“我支持 ECN”
01 / 10 本质等价，一些算法用来区分测试路径是否清除 ECN 位
11（即 CE）：
由中间路由器/交换机设置
说明：检测到拥塞但不丢包


发送端发包：
  ECN = 10  （ECT(0)）
中间路由器检测到拥塞：
  ECN 改为 11  （CE）
接收端收到包：
  响应 TCP ACK 包中打上 ECE 标志位
发送端收到 ACK + ECE：
  发一个 TCP 包打上 CWR，说明“我知道了”


ECT(0) 和 ECT(1) 都是 “我支持 ECN”，在基本功能上是一样的。
它们的区别主要为了测试路径、兼容性验证或更高级的 ECN 策略（如 DCTCP、L4S 等）。


当一个路由器或交换机要把数据从一个接口转发到另一个接口时，它会把数据包暂时放到一个**输出队列（egress queue）**里等着发出。这个队列的长度是有限的。
如果这个输出队列积压得太多（比如带宽小但流量大），说明网络开始拥塞了；
路由器这时就可以做两件事：
丢包（传统方式）
打 ECN 标记，把 IP 头的 ECN 字段改成 11（即 CE） 👉 新方式
所以“队列快满”指的是：当前路由器/交换机里，某条出接口的缓冲区要满了，和最终的接收方没有直接关系。



常见 TCP 标志位简写：
简写	含义	对应 TCP 标志位
S	SYN	Synchronize
F	FIN	Finish
P	PSH	Push
R	RST	Reset
.	ACK	Acknowledgment
U	URG	Urgent
E	ECE	ECN Echo
W	CWR	Congestion Window Reduced



DSCP 用于为网络中的数据包分配不同的 服务等级，通常配合 QoS（Quality of Service）策略来优化网络流量的处理。
根据 DSCP 的不同值，网络设备（如路由器、交换机）可以决定对不同流量的处理方式：
高优先级流量（如语音、视频）会被路由器优先转发。
低优先级流量（如电子邮件、文件传输）则可以排队等待。

DSCP 值	十进制值	用途	优先级
000000	0	Default Forwarding (DF)	普通流量
101110	46	Expedited Forwarding (EF)	高优先级（语音、视频等）
111000	56	Class Selector 1 (CS1)	低优先级（批量数据等）
110000	48	Assured Forwarding (AF)	保障流量
010000	16	Class Selector 2 (CS2)	普通流量


==================================================

当接收方收到带有 PSH 标志的 TCP 数据包时，它会立即将数据从 TCP 接收缓冲区移交给应用层，而不是等待接收缓存区满后再处理。
否则，接收方会等到接收缓冲区达到一定的大小或者超时才会传递数据。
PSH（Push）标志用于加速数据传输，特别是当需要快速将数据交给应用程序时。


==================================================
在 TCP 协议中，RST 标志代表 Reset 标志，用于重置连接。它的作用是强制关闭一个已经存在的连接，并通知对方连接的终止。

使用场景：
连接异常或无效：
当一方尝试向一个没有监听的端口发送数据时，接收方会回复一个带有 RST 标志的数据包，表示该连接或端口不存在或者无法处理。

连接被拒绝：
如果一方想强制中断一个连接（例如，服务器主动拒绝某个客户端连接），它可以发送一个带有 RST 标志的数据包来立即中断连接。

协议错误或非法数据：
当一方收到违反协议规则的包（如非法的序列号或不符合当前状态的包），它可能会通过发送一个带 RST 标志的数据包来重置连接。

连接被非正常关闭：
在一些情况下，连接的一方没有正常完成四次挥手来终止连接，而是遇到错误或崩溃，发送 RST 来关闭连接。


客户端尝试连接到一个关闭的服务：假设你在浏览器中输入一个 URL，但该服务器的 80 端口没有开启，或者服务已经停止运行，服务器会发送一个带有 RST 标志的 TCP 数据包，告诉客户端无法建立连接。
协议错误：如果某个客户端发送了一个无效的请求或非法数据（例如发送了错误的序列号），服务器可能会通过发送 RST 包来拒绝并关闭连接。

==================================================
URG 标志代表 Urgent，表示数据包中包含紧急数据，需要优先处理。具体来说，URG 标志用于指示数据流中的某些部分需要尽早被传输到应用层，而不是按常规顺序等待缓冲区满。

URG 标志的作用：URG 标志的设置指示当前数据包中的数据部分为“紧急数据”，这意味着接收方应该立即将这些数据交给应用层，而不是等待其他数据或继续接收更多的数据。
紧急指针（Urgent Pointer）：URG 标志通常与 紧急指针（Urgent Pointer） 一起使用。紧急指针是 TCP 报文头中的一个字段，用于指示紧急数据的结束位置。
紧急数据是数据流中位于该指针所指位置之前的数据。接收方在收到带有 URG 标志的数据包后，会将紧急数据优先传递给应用层。

数据流中的优先处理：
在某些情况下，应用程序可能会在数据流中插入紧急数据块，这些数据需要优先被接收和处理。TCP 协议通过 URG 标志和紧急指针来标识这部分数据，确保它们在正常数据之前被处理。


关键点：PSH 标志确保数据尽早传递给应用层，但它并不表示数据具有紧急性，只是希望数据不被延迟处理。
关键点：URG 标志告诉接收方，这部分数据是紧急的，必须被立即处理，而不考虑缓冲区中其他数据的顺序。