网络中的数据递交:
当用户发送数据时，将数据向下交给传输层，这是处于应用层的操作，应用层可以通过调用传输层的接口来编写特定的应用程序，
并且TCP/IP协议栈一般也会包含一些简单的应用协议如 Telnet 远程登录、FTP文件传输、SMTP 邮件传输协议等，这些协议有自己的首部——APP首部。
传输层会在接收到上层协议的数据前面加上传输层首部（此处以TCP协议为例，图的传输层首部为TCP首部。当然传输层协议还有UDP协议），传输层会向下交给网络层。
同样地，网络层会在数据前面加上网络层首部（如IP首部），然后网络层再将数据向下交给链路层，
数据链路层会对数据进行最后一次封装，即在数据前面加上数据链路层首部（此处使用以太网接口为例），然后将数据交给网卡。
最后，网卡将数据转换成物理链路上的电平信号，数据就这样被发送到了网络中。数据的发送过程，可以概括为TCP/IP的各层协议对数据进行封装的过程;
当设备的网卡接收到某个数据包后，它会将其放置在网卡的接收缓存中，并告知TCP/IP协议栈内核。
然后TCP/IP协议栈内核就开始工作了，它会将数据包从接收缓存中取出，并逐层解析数据包中的协议首部信息，并最终将数据交给某个应用程序。
数据的接收过程与发送过程正好相反，可以概括为TCP/IP的各层协议对数据进行解析的过程。

运输层:
运输层主要为两台主机上的应用程序提供端到端的通信。在TCP/IP协议族中，有两个传输层协议： TCP（传输控制协议）和UDP（用户数据报协议）。
TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，同时还要确认接收到的数据是正确的，
并且将其组装成有序的数据递交到应用层，同时还要处理超时重传、流量控制等。由于运输层提供了高可靠性的端到端的通信，因此应用层可以更加方便来处理数据。
而另一方面，UDP则为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端，
因此数据的可靠性必须由应用层来提供，这就导致应用层处理程序的困难，但是对于数据要求不可靠的传输通常使用UDP协议，如视频的播放等。

局域网（Local Area Network，缩写为LAN），又称内网.是在一定区域内由多个计算机连接组成的网络,在内部的计算机上的数据可以互联互通、数据共享等。
广域网（Wide Area Network，缩写为WAN），又称广域网、外网（与翻墙的外网是不一样的概念）、公网。但是注意的是我们说的广域网并不等同于互联网。
互联网就是由无数个局域网，通过广域网线路汇聚互联起来，就形成了互联网。
举个例子，如果你家在某网络运营商办理了网络服务，可能他们将送你一个光猫，然后你拿着这个光猫就能上网了，你可能觉得需要多人使用网络，
所以你又去买了一个无线路由器，让家人也能连接到网络上，那么这个家就是一个局域网，然后局域网的通信是通过运营商连接到广域网上的。
无线路由器把电脑、手机等设备连接到局域网LAN上，并分配IP地址，即局域网IP，我们可以称之为LAN-IP，LAN-IP所到之处，就是局域网的范围，像我们电脑的IP地址（192.168.1.xxx）就是一个局域网IP，而路由器的地址就是运营商给我们的一个IP地址，这个IP地址是绝对合法的，可以看做是WAN-IP（实际上这个IP地址也是运营商的局域网IP地址（相对运营商来说），
这个地址在运营商中转换成一个真正的广域网IP地址，因为真正的IP地址是不够的，只能再细分下去，但是这些事情我们暂时无需理会，只要把路由器的IP地址看做是WAN-IP即可）。
LAN-IP是路由器分配给我们的IP，那么我们想要跨越边界进入广域网中，就需要将LAN-IP变成有效的的IP地址，也就是WAN-IP，那么在路由器中就需要将IP地址进行转换，完成LAN-IP<—>WAN-IP地址转换（NAT）。

链路与数据链路:
“链路”和“数据链路”并不是一回事。
所谓链路就是从一个结点到相邻结点的一段物理线路（有线或无线）这是实实在在看得见的，比如我们的网线，而中间没有任何其他的交换结点。
在进行数据通信时， 两台计算机之间的通信路径往往要经过许多段这样的链路。
数据链路则是另一个概念。 这是因为当需要在一条线路上传送数据时， 除了必须有一条物理线路外，
还必须有一些必要的协议来控制这些数据的传输，这就是我们TCP/IP协议栈要做的事情。 把这些TCP/IP协议栈加到链路上，就构成了数据链路。
一般我们所说的链路层指的都是数据链路。

LwIP中的“链路层”:
我们知道，网络接口（如以太网接口）是硬件接口，（提示：网络接口又可以称之为网卡，为了统一，下文均采用网卡表示网络接口），LwIP是软件，那么怎么让硬件与软件无缝连接起来呢？
而且，网卡又有多种多样，怎么能让LwIP使用同样的软件程序能兼容不同的硬件呢？
因此LwIP使用一个数据结构——netif来描述一个网卡，由于网卡是直接与硬件打交道的，硬件不同则处理基本是不同的，比如网卡的有各种各样的芯片，
所以必须由我们自己提供最底层接口函数，LwIP提供统一的接口，比如网卡的初始化，网卡的收发数据，当LwIP底层得到了网络的数据之后，才会经过层层传入内核中去处理；
同理，当应用层需要发送一个数据包的时候，也是讲数据包层层往下递交，然后也需要调用网卡的发送函数，将数据发送到网络中，这样子才能把数据从硬件接口到软件内核无缝连接起来。

简单来说，netif是LwIP抽象出来的网卡描述符，它拥有描述设备中的不同网卡，一个设备至少与一个网卡，才能与网络进行通讯，
LwIP协议栈可以使用多个不同的接口，而源码中的ethernetif.c文件则提供了netif访问各种不同的网卡，每个网卡有不同的实现方式，我们呢一般只需要修改ethernetif.c文件就行了

举个例子：我们可以理解将整个网络的数据传输理解为物流，那么网卡就是不同的运输工具，我们可以选择汽车、飞机、轮船等运输工具，
不同的运输工具速度是不一样的，但是对于一个物流公司而言，可能同时存在很多种运输的工具，这就需要物流公司去记录这些运输工具，
当有一个包裹需要通过飞机运输出去，那么物流公司就会将这个包裹通过飞机发送出去，这就好比我们的网卡，需要哪个网卡发送或者接收网络数据的时候，就会让对应的网卡去工作。

MAC地址:
MAC地址（英语：Media Access Control Address），直译为媒体访问控制地址，也称为局域网地址（LAN Address），以太网地址（Ethernet Address）或物理地址（Physical Address），它是一个用来确认网络设备位置的地址。
第三层网络层负责IP地址，第二层数据链接层则负责MAC地址。
MAC地址用于在网络中唯一标示一个网卡，一台设备若有一或多个网卡，则每个网卡都需要并会有一个唯一的MAC地址。
MAC地址（也称之为链路层地址）
网卡具有链路层地址。
因此，一个主机拥有多少个网卡，那么它就有多少个MAC地址。MAC地址实际上就是网卡地址或网卡标识符。
当某台计算机使用某块网卡后，网卡上的标识符就成为该计算机的MAC地址。
MAC地址长度为6字节（48bit），其前3个字节表示组织唯一标志符（Organizationally Unique Identifier，即OUI），由IEEE的注册管理机构给不同厂家分配的代码，以区分不同的厂家，
后3个字节由厂家自行分配，称为扩展标识符。同一个厂家生产的网卡中MAC地址后24位是不同的。

IP地址与MAC地址的关系:
网络层发送数据包只需要知道目标主机IP地址即可，而以网卡发送数据则必须知道对方的硬件MAC地址
同时IP地址的分配与硬件MAC地址是没有关系的
为了让网络层只需要知道IP地址就可以完成通信工作，那就需要有一个协议将IP地址映射成为对应的MAC地址，
此外还需要考虑IP地址可能是动态的，非常灵活，使用静态的映射方法是行不通的，所以ARP协议就提供优质的地址动态解析服务，
让32位的IP地址能映射成为48位的MAC地址，让上层应用与底层完全分离开，这样子在上层应用就能灵活使用IP地址作为标识，进行通信。
简单来说，就是计算机中会维护一个ARP缓存表，这个表记录着IP地址与MAC地址的映射关系
举个例子，IP地址就相当于你家的地址，MAC就是你的身份证，你的身份证是全国唯一的，这没疑问吧，但你的地址是可以跟别人重叠的（你家人也是住在你家）。
当你寄快递的时候，快递员要确认这个快递是从你家寄出去的，是你本人亲自寄出去的，同样的，当你收快递的时候，快递员也是先电话找到你，然后必须是你本人才能拿到快递，再拿回家。


数据帧:
在发送的数据帧的时候，协议栈取得由高层传递过来的数据报
注意，数据帧与数据报不是一个东西，数据报是形容网络层及其以上的报文，而数据帧一般形容链路层的数据，是一帧一帧的，也是链路层的服务——数据成帧
在链路层中封装该数据报，也就是填写数据帧的各个字段，然后遵循链路接入协议将该帧数据进行传输；
在接收端，控制器接收了整个数据帧，抽取出网络层的数据报，往上层传递。

以太网帧结构，就觉得它有7个字段，但是事实上，前同步码与帧开始符字段不能算是真正的以太网帧数据结构，他们是在网卡发送的时候自动添加进去的，为了数据的准确传输。

以太网帧以一个7字节的前同步码开始。该前同步码的值都是规定为10101010；而后紧接着一个字节的帧开始符，其值是10101011。前同步码字段的作用是实现物理层帧输入输出的同步，而帧开始符表示着以太网数据帧的开始，剩下的5个字段才是真正的以太网数据帧结构。

目标MAC地址（6字节）：这个字段包含目标网卡的MAC地址，当一个网卡收到一个以太网数据帧，如果该数据帧的目标地址是网卡自身的MAC地址或者是MAC广播地址，它都将该帧的数据字段的内容传递给网络层；如果它收到了具有任何其他MAC地址的帧，则将该数据帧丢弃。
源MAC地址（6字节）：自身的MAC地址。
类型字段（2字节）：类型字段允许以太网复用多种网络层协议。我们只需要记住主机能够使用除了IP协议以外的其他网络层协议。事实上，一台给定的主机可以支持多种网络层协议，以对不同的应用采用不同的协议。因此，当以太网帧到达网卡中，网卡需要知道它应该将数据字段的内容传递给哪个网络层协议。比如如有IP协议、ARP协议等。
注意了：当这个字段的值小于1518时，它表示后面数据字段的数据长度，当大于1518的时候才表示递交给哪个协议。
数据字段（46~1500字节）：这个字段承载了IP数据报。以太网的最大传输单元（MTU）是1500字节。这意味着如果IP数据报超过了1500字节，则主机必须将该数据报分片（IPv4支持数据报分片，而IPv6不支持）。数据字段的最小长度是46字节，这意味着如果IP数据报小于46字节，数据报必须被填充到46字节。当采用填充时，传递到网络层的数据包括IP数据报和填充部分，网络层使用IP数据报首部中的长度字段来去除填充部分。
CRC（4字节）：CRC字段包含了以太网的差错校验信息。
所有的以太网都向网络层提供不可靠的无连接服务，在接收到不对的以太网帧时，或者CRC校验不通过时，主机将直接丢弃以太网帧，并不会告知发送的一方。



1080端口是Socks代理服务使用的端口

==================================================协议卷一: 协议
T C P 传给 I P 的 数 据 单 元 称 作 T C P 报 文 段 或 简 称 为 T C P 段( T C P s e g m e n t )。 
I P 传给网络接口层的数据单元称作 I P 数据报 ( I P d a t a g r a m ) 。 
通 过 以 太 网 传 输 的 比 特 流称作帧 (F r a m e ) 。

I P 和 网 络 接 口 层 之 间 传 送 的 数 据 单 元 应 该 是 分 组 ( p a c k e t )。
分组既可以是一个 I P 数据报，也可以是 I P 数据报的一个片( f r a g m e n t)。

U D P 传给 I P 的 信 息 单 元 称 作 U D P 数 据 报 ( U D P d a t a g r a m )，而且 U D P 的首部长为 8 字节

由于 T C P 、 U D P 、 I C M P 和 I G M P 都要向 I P 传 送 数 据 ， 因 此 I P 必须在 生成的 I P 首 部 中 加 入 某 种 标 识 ， 以 表 明 数 据 属 于 哪 一 层 。
为 此 ， I P 在 首 部 中 存 入 一 个 长 度 为 8 b i t 的 数 值 ， 称 作 协 议 域 。 1 表示为 I C M P 协议， 2 表示为 I G M P 协议， 6 表示为 T C P 协议， 1 7 表 示为 U D P 协议。
类似地，许多应用程序都可以使用 T C P 或 U D P 来 传 送 数 据 。 运 输 层 协 议 在 生 成 报 文 首 部 时 要 存 入 一 个 应 用 程 序 的 标 识 符 。 T C P 和 U D P 都用一个 1 6 b i t 的 端 口 号 来 表 示 不 同 的 应 用 程 序 。
网络接口分别要发送和接收 I P 、 A R P和 R A R P 数 据 ， 因 此 也 必 须 在 以 太 网 的 帧 首 部 中 加 入某种形式的标识，以指明生成数据的网络层协议。为此，以太网的帧首部也有一个 16 bit的帧
类型域。

分用:
当目的主机收到一个以太网数据帧时，数据就开始从协议栈中由底向上升，同时去掉各 层协议加上的报文首部。
每层协议盒都要去检查报文首部中的协议标识，以确定接收数据的 上 层 协 议 。 这 个 过 程 称 作 分 用 ( D e m u l t i p l e x i n g )

为协议 I C M P 和 I G M P 定位一直是一件很棘手的事情。把它们与 I P 放在 同一层上，那是因为事实上它们是I P的附属协议。
但是在这里，我们又把它们放在 I P 层 的上面，这是因为ICMP和IGMP报文都被封装在IP数据报中。
对于 A R P 和R A R P ， 我 们 也 遇 到 类 似 的 难 题 。 在 这 里 把 它 们 放 在 以 太 网 设 备 驱 动 程 序的上方，这是因为它们和 I P 数据报一样，都有各自的以太网数据帧类型。


T C P 和 U D P 采用 1 6 b i t 的 端 口 号 来 识 别 应 用 程 序 
服务器一般都是通过知名端口号来识别的。
F T P 服务 器的 T C P 端 口 号 都 是 2 1 ，每个 T e l n e t 服 务 器 的 T C P 端 口 号 都 是 2 3 
任何 T C P / I P 实 现 所 提 供 的 服 务 都 用 知 名 的 1 ~ 1 0 2 3 之 间 的 端 口号
大多数 T C P / I P 实 现 给 临 时 端 口 分 配 1 0 2 4 ~ 5 0 0 0 之 间 的 端 口 号 。

所有关于 I n t e r n e t 的 正 式 标 准 都 以 R F C( R e q u e s t f o r C o m m e n t ) 文 档 出 版 

链 路 层:
链 路 层 主 要 有 三 个 目 的 :
( 1 )为 I P 模 块 发 送 和 接收 I P 数 据 报 ; 
( 2 )为 A R P 模块发送 A R P 请 求 和 接 收 A R P 应 答 ; 
( 3 )为 R A R P 发送 R A R P 请 求和接收 R A R P 应答。
T C P / I P 支 持 多 种 不 同 的 链 路 层 协 议 ， 这 取 决 于 网 络 所 使 用 的 硬 件 ， 如 以 太 网 、 令 牌 环 网 、 F D D I ( 光 纤 分 布 式 数 据 接 口 ) 及 R S- 2 3 2 串 行 线 路 等 。

而对于以太网，则要求最少要有 4 6 字 节 。 为 了 保 证 这 一 点 ， 必 须 在 不 足 的 空 间 插 入 填 充 ( p a d )字节。

环回接口:
大多数的产品都支持环回接口( Loopback Interface)，以允许运行在同一台主机上的客户 程序和服务器程序通过 T C P / I P 进行通信。
大多数系统把 I P 地址 1 2 7 . 0 . 0 . 1 分配给这个接口，并命名为 l o c a l h o s t 。

最大传输单元mtu:
如果 I P 层 有 一 个 数 据 报 要 传 ， 而 且 数 据的长度比链路层的 M T U 还大，那么 I P 层 就 需 要 进 行 分 片 ( f r a g m e n t a t i o n )， 把 数 据 报分成若干片，这样每一片都小于 M T U 。

IP网际协议:
I P 是 T C P / I P 协 议 族 中 最 为 核 心 的 协 议 。
所 有 的 T C P 、 U D P 、 I C M P 及 I G M P 数据都以 I P 数据 报格式传输

不可靠( u n r e l i a b l e)的意思是它不能保证 I P 数据报能成功地到达目的地。 I P 仅 提 供 最 好 的传输服务。如果发生某种错误时，如某个路由器暂时用完了缓冲区， 
I P 有 一 个 简 单 的 错 误 处理算法:丢弃该数据报，然后发送 I C M P 消 息 报 给 信 源 端 。 任 何 要 求 的 可 靠 性 必 须 由 上 层 来 提供(如 T C P )。

无连接( c o n n e c t i o n l e s s ) 这 个 术 语 的 意 思 是 I P 并 不 维 护 任 何 关 于 后 续 数 据 报 的 状 态 信 息 。 每个数据报的处理是相互独立的。这也说明， I P 数 据 报 可 以 不 按 发 送 顺 序 接 收 。 
如 果 一 信 源 向相同的信宿发送两个连续的数据报(先是 A，然后是B)，每个数据报都是独立地进行路由 选择，可能选择不同的路线，因此 B可能在 A到达之前先到达。

普 通 的 I P 首部长为 2 0 个 字 节 ， 除 非 含 有 选 项 字 段 。
总长度字段是指整个 I P 数 据 报 的 长 度 ， 以 字 节 为 单 位 。 利 用 首 部 长 度 字 段 和 总 长 度 字 段 ， 就可以知道 I P 数据报中数据内容的起始位置和长度。由于该字段长 1 6 比特，所以 I P 数据报最 长可达 6 5 5 3 5 字节
总长度字段是 I P 首 部 中 必 要 的 内 容 ， 因 为 一 些 数 据 链 路 ( 如 以 太 网 ) 需 要 填 充 一 些 数 据 以 达 到 最 小 长 度 。 尽 管 以 太 网 的 最 小 帧 长 为 4 6 字 节 ，但是 I P 数 据 可 能 会 更 短 。 
如 果 没 有 总 长 度 字 段 ， 那 么 I P 层就不知道 4 6 字 节 中 有 多 少 是 I P 数 据 报 的 内 容 。

T T L( t i m e - t o - l i v e ) 生 存 时 间 字 段 设 置 了 数 据 报 可 以 经 过 的 最 多 路 由 器 数 。 它 指 定 了 数 据 报 的 生 存 时 间 。 T T L 的 初 始 值 由 源 主 机 设 置 ( 通 常 为 3 2 或 6 4 )， 一 旦 经 过 一 个 处 理 它 的 路 由 器 ， 
它的值就减去 1。当该字段的值为 0 时，数据报就被丢弃，并发送 I C M P 报文通知源主机。

为了计算一份数据报的 I P 检验和，首先把检验和字段置为 0 。然后，对首部中每个 1 6 b i t 进行二进制反码求和(整个首部看成是由一串 16 bit的字组成)，结果存在检验和字段中。当 收到一份 I P 数据报后，同样对首部中每个 1 6 b i t 进行二进制反码的求和。

IP路由选择:
I P 路 由 选 择 是 简 单 的 ， 特 别 对 于 主 机 来 说 。 如 果 目 的 主 机 与 源 主 机 直 接 相 连 ( 如 点 对 点 链 路 ) 或 都 在 一 个 共 享 网 络 上 ( 以 太 网 或 令 牌 环 网 )，那么 I P 数 据 报 就 直 接 送 到 目的主机上。
否则，主机把数据报发往一默认的路由器上，由路由器来转发该数据报。大多 数的主机都是采用这种简单机制。

I P 层 既 可 以 配 置 成 路 由 器 的 功 能 ， 也 可 以配置成主机的功能。当今的大多数多用户系统，包括几乎所有的 U n i x 系 统 ， 都 可 以 配 置 成 一个路由器。

I P 可以从 T C P 、 U D P 、 I C M P 和 I G M P 接 收 数 据 报 ( 即 在 本 地 生 成 的 数 据 报)并进行发送，或者从一个网络接口接收数据报(待转发的数据报)并进行发送。
I P 层在 内存中有一个路由表。当收到一份数据报并进行发送时，它都要对该表搜索一次。
当数据报 来自某个网络接口时， I P 首先检查目的 I P 地址是否为本机的 I P 地址之一或者 I P 广 播 地 址 。
如 果 确实是这样，数据报就被送到由 I P 首 部 协 议 字 段 所 指 定 的 协 议 模 块 进 行 处 理 。
如 果 数 据 报 的目的不是这些地址，那么( 1 )如果 I P 层 被 设 置 为 路 由 器 的 功 能 ， 那 么 就 对 数 据 报 进 行 转 发 (也就是说，像下面对待发出的数据报一样处理);否则( 2)数据报被丢弃。

路由表中的每一项都包含下面这些信息:
