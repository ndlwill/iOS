软件开源是许多软件企业需要关注的问题，不同的开源软件协议，对应不同的源代码使用限制。只有了解这些开源软件协议，才能更好地使用和回馈开源软件，否则就有可能触犯法律。

四种常见的开源软件协议：
GPL（GNU General Public License）
LGPL（GNU Lesser General Public License）
BSD（Berkerley Software Distribution）
Apache License

1、GPL
GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。

GPL的“传染性”在于：只要在一个软件中使用（”使用”指类库引用，修改后的代码或者衍生代码）GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。我们所熟悉的Linux就是采用了GPL。

2、LGPL
LGPL是GPL的一个为主要为类库使用设计的开源协议。LGPL允许商业软件通过类库引用（link）方式使用LGPL类库而不需要开源商业软件的代码。
因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。

3、BSD
BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。

当使用了BSD协议的代码，或者以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：
如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议；如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议；不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。
因此，很多公司企业在选择开源软件的时候都首选BSD协议，因为可以完全控制这些第三方的代码，而且在必要的时候可以进行修改或者二次开发。

4、Apache License
Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布(作为开源或商业软件)。需要满足的条件也和BSD类似：

需要给代码的用户一份Apache Licence；如果你修改了代码，需要在被修改的文件中说明；在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明；
如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。