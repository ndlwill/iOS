资源瘦身:
借助工具LSUnusedResources进行资源文件的删除
压缩资源
不经常用到的大图资源可以采取下载的方式加载到APP上

代码瘦身:
当我们的App被打包成ipa的时候，代码会被打包成一个一个个的.o文件，而这些.o文件组成了MachO，
而系统在编译MachO文件的时候会生成一个附带的文件LinkMap。

LinkMap的组成:
LinkMap由Object File、Section、Symbol三部分组成，描述了工程所有代码的信息。可以根据这些信息针对性的去优化空间。

LinkMap的获取:
1.在XCode中开启编译选项
Project -> Build Settings -> 把Write Link Map File设置为YES

2.
Project -> Build Settings -> 把Path to Link Map File的地方设置好地址
默认的文件地址：
~/Library/Developer/Xcode/DerivedData/XXX-xxxxxxxxxxxxx/Build/Intermediates/XXX.build/Debug-iphoneos/XXX.build

3.
运行项目在地址位置将生成.txt的文件

LinkMap的分析:
借助工具LinkMap解析工具，我们可以分析每个类占用的大小
针对性的进行代码的体积的优化，比如三方库占用空间，有没其他的替代方案。在取舍两个相同库的时候也可以根据体积的比重做出取舍。

MachO分析:
哪些是无用的类哪些是无用的方法，需要我们进一步从MachO的层面上去分析:
MachO文件可以说是App编译之后的最重要的部分，通过MachOView这个软件我们可以更加直观看到MachO的组成。

__objc_selrefs:记录了几乎所有被调用的方法
__objc_classrefs和__objc_superrefs：记录了几乎所有使用的类
__objc_classlist:工程里所有的类的地址

删除无用的类:
MachO文件中__objc_classrefs段记录里了引用类的地址，
__objc_classlist段记录了所有类的地址，我们可以认为取两者的差值就可以获得未使用类的地址，然后进行符号化，就可以取得未使用类的信息。

通过otool -v -s __DATA __objc_classrefs获取到引用类的地址.
通过otool -v -s __DATA __objc_classlist获取所有类的地址.

删除未使用的方法:

