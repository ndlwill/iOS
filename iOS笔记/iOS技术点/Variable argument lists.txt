int addemUp (int firstNum, ...) {
  // 1. 参数后面添加省略号...
    va_list args;  // 2. 创建一个va_list类型的变量
    int sum = firstNum;
    int number;
    va_start(args, firstNum); // 3. 初始化va_list，此时va_list指向firstNum之后的第一个参数
    while (1) {
        number = va_arg(args, int); // 4. 获取当前指向的参数的值，并移动到下一个参数
        sum += number;
        if (number == 0) {
          // 用0表示结束
            break;
        }
    }
    va_end(args); // 5. 清理
    return  sum;
}

// 调用
sum = addemUp(1,2,3,4,5,0);
// sum = 15

要创建一个可变参数函数，需要把一个省略号（…)放在函数的参数列表后面。
接着需要声明一个一个va_list类型的变量，这个va_list类型的变量类似于一个指向参数的指针。
接着我们调用va_start()并传入函数的最后一个声明的参数的变量名，来使得va_list变量指向第一个附加的参数。
接着我们调用va_arg()并传入我们期待的参数类型，程序就会返回与该类型匹配数量的字节（即参数的值），并且移动va_list指向下一个参数。之后不断的调用va_arg()，获得更多的参数的值，直到完成整个参数处理的过程。
最后调用va_end()来进行清理。