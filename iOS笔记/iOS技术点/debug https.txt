Enable Logging In Xcode:
Product > Scheme > Edit Scheme > Arguments

CFNETWORK_DIAGNOSTICS

When you next run your app and use URLSession, CFNetwork diagnostic log entries appear in Xcode’s debug console area.


Enable Logging Programmatically to See Problems Outside of Xcode:
To investigate problems outside of Xcode, programmatically enable CFNetwork diagnostic logging by setting the environment variable directly.

setenv("CFNETWORK_DIAGNOSTICS", "3", 1);

If you’re programming in Objective-C, put the code at the start of your main function.




class NetworkManager {
public:
    NetworkManager() {
        printf("===network");
    }
};

/*
C++ 中的静态初始化器通常是指在程序启动时，由静态变量的构造函数或全局变量的初始化来执行的代码。它们会在 main() 函数之前执行。
*/
static NetworkManager networkManager;// C++ static initializers

int main(int argc, char * argv[]) {
    NSLog(@"===main");
    
    @autoreleasepool {
        // Setup code that might create autoreleased objects goes here.
        appDelegateClassName = NSStringFromClass([AppDelegate class]);
    }
    return UIApplicationMain(argc, argv, nil, appDelegateClassName);
}

===network
===main

C++ 中的静态初始化器会在 main() 函数之前执行，是因为静态变量的初始化顺序是由 C++ 标准规定的。
这种初始化顺序保证了在 main() 函数执行之前，所有静态和全局变量都会被初始化。