property在runtime中是objc_property_t定义如下:
typedef struct objc_property *objc_property_t;

而objc_property是一个结构体，包括name和attributes，定义如下：
struct property_t {
    const char *name;
    const char *attributes;
};


而attributes本质是objc_property_attribute_t，定义了property的一些属性，定义如下：

/// Defines a property attribute
typedef struct {
    const char *name;           /**< The name of the attribute */
    const char *value;          /**< The value of the attribute (usually empty) */
} objc_property_attribute_t;


而attributes的具体内容是什么呢？其实，包括：类型，原子性，内存语义和对应的实例变量。
我们定义一个string的property@property (nonatomic, copy) NSString *string;，通过 property_getAttributes(property)获取到attributes并打印出来之后的结果为T@"NSString",C,N,V_string
其中T就代表类型，可参阅Type Encodings，C就代表Copy，N代表nonatomic，V就代表对于的实例变量。

反编译过相关的代码,他大致生成了五个东西
OBJC_IVAR_$类名$属性名称 ：该属性的“偏移量” (offset)，这个偏移量是“硬编码” (hardcode)，表示该变量距离存放对象的内存区域的起始地址有多远。
setter 与 getter 方法对应的实现函数
ivar_list ：成员变量列表
method_list ：方法列表
prop_list ：属性列表