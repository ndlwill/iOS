BLOB (binary large object),二进制大对象
BLOB常常是数据库中用来存储二进制文件的字段类型
BLOB是一个大文件，典型的BLOB是一张图片或一个声音文件


==================================================


1. 初始状态
数据库打开后，未进行任何数据库操作时
这里分了三个部分，左面是用户空间，中间是内核缓存区（文件的读写缓存），右边是物理磁盘设备（iOS的闪存）

2. 准备读取（加读锁）
任何写操作都会先进行读操作，因为写之前要读取数据库的schema，插入和修改的位置等。在读取操作之间要加上读锁。加读锁是为了防止其它数据库连接进行写操作，而保证读取时数据不被破坏。这时其它数据库的读取操作依然可以正常执行

3. 读取数据
读取时通过系统文件读取调用，会从内核缓存中拷贝到用户空间

4. 准备修改数据（加写锁）
数据读取完毕后，就准备开始修改数据了，修改数据之前首先要加写锁，此写锁可以和其它进程的读锁同时存在

5. 建立回滚日志
开始写操作之前，先建立一个回滚日志文件，已便进行回滚操作。将更改之前的旧数据保存到回滚日志文件中
回滚日志文件包含一个头信息（绿色部分），记录回滚必要信息

6. 在用户空间中修改数据

7. 冲(fsync)回滚日志文件
用户空间修改数据后，未确保回滚日志文件可靠，必须把回滚日志文件冲入物理磁盘进行持久存储。这样以确保内核崩溃或断电后依然可恢复数据

8. 加互斥锁
准备开始真正的写文件了，要加互斥锁了。互斥锁可以和已经打开的读锁同时存在，但不允许新建读锁了

9. 写数据库文件
现在可以安全的写数据文件了

10. 冲(fsync)数据库文件
冲数据库文件到持久存储设备。

11. 删除回滚日志
冲入数据库文件后才能删除回滚日志，确保内核崩溃或断电后依然可恢复数据。

12. 释放锁