gethostbyname, gethostbyaddr是不可重入函数；已经被getaddrinfo, getnameinfo替代
可重入函数主要用于多任务环境中，一个可重入的函数简单来说就是可以被中断的函数，也就是说，可以在这个函数执行的任何时刻中断它，转入OS调度下去执行另外一段。
不可重入,意味着不可被并行调度,否则会产生不可预料的结果,这些函数提内一般使用了静态(static)的数据结构,使用了malloc()或者free()函数,使用了标准I/O函数等等。

getaddrinfo 将主机和服务转换到socket地址
getnameinfo 功能与getaddrinfo相反，它将socket地址转换到主机和服务，融合了函数gethostbyaddr、getservbyport的功能

int getaddrinfo(const char *node, const char *service, const struct addrinfo *hints, struct addrinfo **res);
int getnameinfo(const struct sockaddr *sa, socklen_t salen, char *host, size_t hostlen, char *serv, size_t servlen, int flags);

struct addrinfo {
        int     ai_flags;
        int     ai_family;
        int     ai_socktype;
        int     ai_protocol;
        size_t  ai_addrlen;
        struct sockaddr *ai_addr;
        char   *ai_canonname;
        struct addrinfo *ai_next;
};


getaddrinfo:
node或service参数最多可能有一个为NULL。
node 要么为点分式地址(IPv4-点分十进制, IPv6-十六进制) 要么为主机名
service为端口号或者端口名。如果不为空，为端口名，则必须可以解析，通过/etc/services。