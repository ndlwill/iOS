首先，lwip 是什么：lwip 提供了一个完整的 tcp 协议栈。 tcp 协议栈是一套完整的 tcp 算法，可以把 ip 包组装成 tcp 连接和数据流，并且可以处理丢包重发等一系列问题。


普通的通信：
用户的tcp连接 -> 用户操作系统tcp协议栈 -> 内核ip包 -> 用户网卡 -> 网络 -> 服务器网卡 -> ip数据包 -> 服务器tcp协议栈 -> 服务器程序


经过 udp vpn 的 tcp 通信：
用户的tcp连接 -> 用户操作系统tcp协议栈 -> 内核ip包 -> 【vpn虚拟网卡】-> 【vpn程序】-> 【专程 udp vpn 协议包】-> 【udp vpn 服务器】-> 【vpn虚拟网卡】-> 内核ip包 -> 服务器tcp协议栈 .....
在这个流程里，tcp 是不能直接作为 vpn 协议的，如果直接用 tcp 协议替换上述流程里的 udp 协议，会因为协议特性的原因导致遇到丢包的时候会严重卡顿。所以解决办法就是引入 lwip 这个独立的 tcp 协议栈。


经过 tcp vpn 的 tcp 通信：
用户的tcp连接 -> 用户操作系统tcp协议栈 -> 内核ip包 -> 【vpn虚拟网卡】-> 【vpn程序】-> 【vpn程序里的lwip提供的tcp协议栈】->【proxy协议的tcp连接】-> 【proxy模式的tcp服务器】-> .....
实际上相当于把用户的真实 tcp 请求，在用户本地又组装成了 proxy 协议的 tcp 请求，用 proxy tcp 与我们的服务器通信的


所以，lwip 里面的网卡是一个完全虚拟的不存在的网卡，仅用于跑通 lwip 流程，接受用户 tcp 发出的 ip 包并重新组装成 tcp 连接。