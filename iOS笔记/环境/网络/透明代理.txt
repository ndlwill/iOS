透明代理( Transparent Proxy )

代理: 假设 A 与 B 要通信，如果它们之间有一个中间人 C 当传话筒，那么 C 就是代理。

前向代理( Forward Proxy) 和反向代理 ( Reverse Proxy )
区分它们主要看代理在请求中扮演的角色是客户端还是服务器

”使用 shadowsock 科学上网”的方式都属于前向代理。
在用户使用的过程中，代理服务器扮演的是客户端的角色，即代理代替客户端向服务器发送请求，然后将服务的回应返回给客户端.

而在反向代理中，代理扮演的是服务器的角色，它背后是真正的后端服务器(甚至是集群)，用户只知道它访问的是代理，却不知道它的请求最终会到达后端服务器。
比如著名的 Nginx 常常会用来作反向代理。

透明意味着代理本身对用户是不可见( invisible )的，也就是说用户侧不需要进行代理设置，请求的目标也是真实的服务器
作为中间人，透明代理会拦截用户的请求，其常见的应用场景有：
缓存请求的结果。透明代理缓存服务器的回应，这样之后重复请求到达时，直接回复给用户就好了，不用再将请求扔给服务器，这一点有没有让你想到 CDN ?
过滤请求。也就是一些公司常常使用的行为管理功能，禁止掉员工对 QQ、weixin、炒股等网站的请求


从网卡收到报文时会查询路由，路由决定了报文是应该转发 ( forward )还是上送本机 ( local deliever )
我们知道内核决定是否上送本机取决于报文的目的地址是否是本地( local )地址，比如 127.0.0.0/8 这个网段的就是本地地址。

这样还不够，作为代理，它需要把感兴趣的用户的报文截获,即明知道这报文不是给自己的，也要收上来
所以它需要将更多的地址视为本地地址，可以将所有地址(0.0.0.0/0)这个视为本地地址