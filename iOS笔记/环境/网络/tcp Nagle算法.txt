Nagle算法（Nagle’s Algorithm）是一种用于TCP协议的优化技术，旨在减少小数据包的数量，从而提高网络效率。
它通过延迟发送小的数据包，直到能合并多个数据包为一个较大的数据包，以减少网络上的开销。


Nagle算法的工作原理是：
当应用程序发送一个小的数据包时，TCP不会立即发送，而是等待更多的数据，直到缓冲区满或者发送了足够多的数据（一般是一个MSS大小的数据包）。
这样做的目的是减少网络中发送的小数据包，这些小包会增加TCP的头部开销，降低效率。

算法的优势：
减少小数据包的数量：因为每个小数据包都要带上TCP头部，频繁发送小数据包会导致较大的开销。
提高带宽利用率：将多个小数据包合并成一个大的数据包可以更好地利用网络带宽。

可能的缺点：
延迟增加：如果应用程序频繁发送小数据包，Nagle算法会导致数据的传输延迟，可能影响实时性要求较高的应用（如在线游戏或语音通话等）。

控制Nagle算法：
关闭Nagle算法：可以通过TCP_NODELAY选项来关闭Nagle算法，允许应用程序立即发送小的数据包。这对低延迟、实时性要求高的应用有帮助。

Nagle算法适用于大多数需要传输大量数据而不关心实时性的应用，但对于要求低延迟的应用，可能会影响性能。


==================================================MSS
MSS（最大分段大小，Maximum Segment Size）指的是TCP协议中，单个数据段的最大有效载荷大小，即不包括TCP头部和IP头部的部分。
MSS的大小通常是由网络的最大传输单元（MTU）决定的，MTU是指网络链路层能够承载的最大数据包大小，而MSS则是在MTU的基础上扣除了TCP/IP头部的大小。

对于以太网（Ethernet）网络，标准的MTU大小是 1500字节。但因为以太网帧的头部（14字节）和IP头部（20字节）以及TCP头部（20字节），所以：
MSS = MTU - IP头部 - TCP头部
MSS = 1500 - 20 - 20 = 1460字节

MSS的大小并不是固定的，可以通过TCP选项进行协商。在TCP握手阶段，客户端和服务器会交换MSS值，以确保双方能使用最适合的最大段大小。
MSS的大小受限于链路的MTU值，如果数据包超过了MSS，它将被拆分成多个数据段（分段），但TCP尽量避免在数据传输过程中进行分段，以提高效率和减少开销。


###
分段（fragmentation）是 网络层（即IP层）处理的
IP协议负责将数据包从源主机传送到目的主机，如果数据包大于链路层的MTU，IP层会将数据包进行分段。
每个分段都会有自己的IP头部，且每个分段都会被单独路由。分段和重组的具体操作是在网络层进行的，直到所有分段都到达目的地，IP层会将它们重新组装成原始数据包。

传输层协议（如TCP）会根据MSS来限制数据段的大小，但它不会进行分段。

分段是网络层的任务，传输层只关心数据的流控制和可靠传输。

传输层会依据MSS调整每个数据包的数据部分大小，而分段是在网络层根据链路的MTU来决定的。
###


==================================================粘包处理
自定义包头

在开始传输数据时，在包头拼上自定义的一些信息，比如前4个字节表示包的长度，5-8个字节表示传输的类型（做一些业务区分）,后面为实际的数据包。