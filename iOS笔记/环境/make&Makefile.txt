make(GNU make)是一个项目构建工具，用于方便地编译、链接多个源代码文件

make的通常用法是:
在项目目录下把编译链接的命令，写入Makefile
在项目命令下，执行make命令，会自动读取当前目录下的Makefile并解析执行
make命令可以后接参数：
make，相对于执行make all，通常代表从头编译整个项目
make install，通常代表把当前项目安装到系统中，还可以附加一些参数指定安装位置等
make clean，通常代表清理项目中的杂项文件，不包括源文件


make和Makefile也不够用了，写起来太长，而且需要考虑跨平台等适配性问题，使得编写Makefile过于复杂。
最终在make和Makefile的上层，又出现了构建工具cmake和CMakeLists，cmake重点解决的是跨平台问题。
我们可以通过编写CMakeLists.txt，使用cmake自动生成需要的Makefile，然后make根据Makefile生成具体要执行的gcc命令等，交给shell去执行。

==================================================

要设置 make install 的安装路径，你通常需要使用 CMake 或 configure 脚本来配置构建过程。这允许你指定安装目录，以便在运行 make install 时将文件安装到指定位置。
使用 CMake:
如果你的项目使用 CMake 进行构建，你可以在 CMakeLists.txt 文件中使用 CMAKE_INSTALL_PREFIX 变量来设置安装路径。在 CMakeLists.txt 中添加如下行
set(CMAKE_INSTALL_PREFIX "/path/to/installation/directory")
然后，当你运行 cmake 生成 Makefile 时，CMake 将使用此路径作为安装目录。

使用 Autotools:
如果你的项目使用 Autotools，可以在运行 configure 脚本时通过 --prefix 选项指定安装路径。
./configure --prefix=/path/to/installation/directory
然后运行 make 和 make install。

手动指定 make install 目标:
如果你没有使用 CMake 或 Autotools，也可以手动指定 make install 的目标安装路径。在运行 make install 时，你可以使用 DESTDIR 变量来指定安装路径
make install DESTDIR=/path/to/installation/directory
请注意，确保你有足够的权限来在指定的目录中安装文件。在某些系统上，可能需要使用 sudo 或以管理员权限运行 make install 以确保安装成功。