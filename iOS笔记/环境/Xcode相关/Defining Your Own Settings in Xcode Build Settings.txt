While developing an iOS app often times we have to work for different environments. Like development or production.

The thing that most commonly change between these environments is the server url.
In order to develop or test the app we point our app to a development server.
And when we need to release our app to the AppStore, we need to switch the server url from development to production.

To avoid all this, the easiest and quickest solution of this problem is to introduce your own settings in Xcode build settings of your project.
The process involves 3 steps:
1.Add user defined settings in your target’s build settings.
Name your new setting ‘SERVER_URL’.
2.Add a key in your Info.plist file that uses your recently defined build setting.
Enter the ‘ServerUrl’ in the key and $(SERVER_URL) in the value part.
At run time, anything that is inside $() is replaced by its actual value in the build settings.
3.Read the value via Info.plist in your code.
Bundle class provides a method to access values defined in Info.plist using corresponding keys.
let serverUrl = Bundle.main.object(forInfoDictionaryKey: “ServerURL”) as! String
print(serverUrl)


==================================================

https://github.com/halfrost/Halfrost-Field/blob/master/contents/iOS/ios_multienvironments.md

==================================================

Compiler Flags:
-D 是编译器选项，用于定义一个预处理宏
预处理宏的用途:
预处理宏主要用于在编译时动态修改代码，常见的用途包括：
条件编译：根据不同的宏定义编译不同的代码。
定义常量：定义在编译期间可以使用的常量。
代码配置：在不同的编译环境中使用不同的设置。

#define appServer APP_SERVER_ID

Compiler Flags: -DAPP_SERVER_ID=$(server)
其中APP_SERVER_ID为宏名称，用来对应User-Defined Setting的名称即server。
User Defined Setting中设置server