操作系统把包含这些点击事件的信息包装成UITouch和UIEvent

Hit-Test 机制:
当用户触摸(Touch)屏幕进行交互时，系统首先要找到响应者（Responder）。
系统检测到手指触摸(Touch)操作时，将Touch 以UIEvent的方式加入UIApplication事件队列中。
UIApplication从事件队列中取出最新的触摸事件进行分发传递到UIWindow进行处理。
UIWindow 会通过hitTest:withEvent:方法寻找触碰点所在的视图，这个过程称之为hit-test view。

UIApplication -> UIWindow -> Root View -> ··· -> subview
在顶级视图（Root View）上调用pointInside:withEvent:方法判断触摸点是否在当前视图内；
如果返回NO，那么hitTest:withEvent:返回nil

如果返回YES，那么它会向当前视图的所有子视图发送hitTest:withEvent:消息，
所有子视图的遍历顺序是从最顶层视图一直到到最底层视图，
即从subviews数组的末尾向前遍历，直到有子视图返回非空对象或者全部子视图遍历完毕

如果有subview的hitTest:withEvent:返回非空对象则A返回此对象，
处理结束（注意这个过程，子视图也是根据pointInside:withEvent:的返回值来确定是返回空还是当前子视图对象的。
并且这个过程中如果子视图的hidden=YES、userInteractionEnabled=NO或者alpha小于0.1都会并忽略）

如果所有subview遍历结束仍然没有返回非空对象，则hitTest:withEvent:返回self
系统就是这样通过hit test找到触碰到的视图(Initial View)进行响应。

