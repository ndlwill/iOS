CMake就是生成Makefile的自动化构建工具（自动生成Makefile文件，不需要我们自己写Makefile）

它使用平台无关的 CMake 清单文件CMakeLists.txt

我们写代码无非就是将写好的代码进行编译生成可执行文件，那么就可以用CMake 生成 Makefile 文件并编译源代码

它的流程基本如下：
编写 CMake配置文件 CMakeLists.txt 。
执行cmake PATH命令生成 Makefile。其中， PATH 是 CMakeLists.txt 所在的目录。
使用 make 命令进行编译。（既然步骤2的时候就生成Makefile文件了，那么肯定是可以直接make编译啦）

基本语法 一个最基本的CmakeLists.txt文件最少需要包含以下3行代码：
CMake 最低版本号要求
cmake_minimum_required (VERSION 2.8)

项目信息
project (section1)

指定生成目标
add_executable(section1 main.c) 注意：CMake的语法支持大写、小写甚至是大小写混合的，实在是太变态了，使用的CMake语法是小写的，全局变量是大写的，局部变量是小写！

其实上面的三句代码看起来像是函数，但并不是函数而是命令，它跟我们的在linux的命令差不多，反正就是指定CMake要怎么做的一系列命令。比如：
cmake_minimum_required：设置一个工程所需要的最低 CMake版本，如果 CMake的当前版本低于指定的版本，它会停止处理工程文件，并报告错误。
project：为整个工程设置一个工程名。
add_executable：使用给定的源文件，为工程引入一个可执行文件。