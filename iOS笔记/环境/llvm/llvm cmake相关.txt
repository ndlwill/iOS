==================================================set(LLVM_LINK_COMPONENTS support)
在 LLVM 和 Clang 项目的 CMake 构建系统中，set(LLVM_LINK_COMPONENTS ...) 的作用是指定链接 LLVM 库时要包含的组件。
这是为了确保在构建 LLVM 和 Clang 时，链接器会包括所需的 LLVM 组件。

support 组件是 LLVM 库的一个基础组件，包含了一些通用的支持功能，例如日志记录、命令行解析等。
通过在 LLVM_LINK_COMPONENTS 中指定这些组件，确保了在链接时包含了所需的库。

这种做法允许 LLVM 和 Clang 的构建系统以更模块化的方式构建，只链接那些在项目中实际需要的组件，从而减小最终生成的可执行文件的大小。
在 CMake 中，LLVM_LINK_COMPONENTS 的设置通常在项目的 CMakeLists.txt 文件中进行。

set(LLVM_LINK_COMPONENTS support) 的目的是告诉 CMake 在链接 LLVM 库时要包括 support 组件。

在 LLVM 项目中，support 组件对应的库文件通常是 libLLVMSupport.a（对于静态库）或 libLLVMSupport.so（对于共享库）。这些库文件位于 LLVM 构建目录的 lib 子目录中。
假设 LLVM 项目的构建目录为 ${LLVM_BUILD_DIR}，那么 libLLVMSupport.a 可能位于 ${LLVM_BUILD_DIR}/lib 目录下。这里 ${LLVM_BUILD_DIR} 是 LLVM 项目构建时指定的构建目录。
在 Clang 项目中，使用 LLVM 作为后端，因此同样也会有对 libLLVMSupport 的链接需求。
通常情况下，如果你在 CMakeLists.txt 文件中使用 set(LLVM_LINK_COMPONENTS support)，构建系统会处理链接操作，确保正确地链接到 libLLVMSupport 库。


==================================================CMake 的 modules 
CMake 的 modules 通常指的是包含一组 CMake 相关的功能或函数的 .cmake 文件，这些文件可以在多个项目中被复用。这有助于模块化 CMake 构建脚本，使其更易维护和扩展。
这些模块文件可以包含定义变量、函数、宏等的 CMake 代码。通过使用 include() 或 find_package() 等 CMake 命令，你可以在你的项目中引入这些模块，并利用它们提供的功能。


==================================================Unknown CMake command "add_clang_executable"