CocoaPods 1.9 增加了对 XCFrameworks 的支持

https://github.com/CocoaPods/CocoaPods/releases/tag/1.9.0.beta.1

知识小集
https://juejin.cn/user/1327865776308782/posts


https://developer.apple.com/videos/play/wwdc2019/416/
XCFramework 支持:
随着 Xcode 11 的发布，Apple 引入了使用 .xcframework 文件扩展名的新 bundle 格式。
这种格式允许将为不同架构和平台编译的框架的多个副本组合为单个结构。

使用现有的 vendored_framework DSL 来支持 XCFrameworks 的方法。
Pod::Spec.new do |s|
  s.name         = 'ToastLib'
  s.version      = '1.0.0'
 
  # ...rest of attributes here
 
  s.vendored_frameworks = 'ButterLib.xcframework'
end

Podspec 的基于配置的依赖关系:
对于只在开发调试期间使用的依赖，可以使用 pod Podfile DSL 上的 :configurations 选项来设置：

target 'BananaApp' do
  pod 'Toast', :configurations => ['Debug']
end


新版本将该功能扩展到 Pod 发布者。 相同的 :configurations 选项现在可以与 dependency Podspec DSL一起使用
Pod::Spec.new do |s|
  s.name         = 'ToastLib'
  s.version      = '1.0.0'
 
  # ...rest of attributes here
 
  s.dependency 'ButterDebugging', :configurations => ['Debug']
  s.dependency 'ErrorReportingTool', :configurations => ['Release']
end

代码覆盖率:
Pod::Spec.new do |s|
  s.name         = 'Networking'
  s.version      = '1.0.0'
 
  # ...rest of attributes here
 
  s.test_spec 'Tests' do |test_spec|
    test_spec.scheme = {
      :code_coverage => true, :environment_variables => {'FOO' => 'BAR' }
    }
  end
end


Swift 版本:
着新的 Swift 版本发布，Pod 发布者可以通过使用 swift_versions Podspec DSL 增加对多个 Swift 版本进行编译的支持
为了更好地支持此功能，Podfile DSL 在 1.7 中进行了更新，以允许用户使用 supports_swift_version DSL 指定其应用程序支持的 Swift 版本。
如果两个不同的 target 包含相同的依赖关系，但需要不同的 Swift 版本，则 CocoaPods 现在将为同一 Pod 创建多个不同的目标，以适应所使用的不同 Swift 版本。
Pod::Spec.new do |s|
  s.name         = 'CannonPodder'
  s.version      = '1.0.0'
 
  # ...rest of attributes here
 
  s.swift_versions = ['4.0', '5.0']
end

target 'SampleApp' do
  supports_swift_version '< 5.0'
  pod 'CannonPodder'
end
 
target 'SecondApp' do
  supports_swift_version '>= 5.0'
  pod 'CannonPodder'
end
将创建 CannonPodder 目标的两个不同版本
这样可以确保为依赖于 Pod 的每个目标使用正确的 Swift 版本。

use_frameworks! 链接定制:
Swift 支持静态链接，CocoaPods 扩展了此 DSL，以允许指定首选的链接类型。
use_frameworks! :linkage => :static