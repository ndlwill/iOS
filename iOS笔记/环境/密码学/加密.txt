http://blog.csdn.net/zy_flyway/article/details/48030723

http://www.jianshu.com/p/422e97e60f2d

利用 token 值来判断用户的登录状态


以前见过的都是RSA公钥加密+私钥解密   今天突然蹦出来个私钥加密

RSA公钥私钥加解密:
其实公钥和私钥"都可以"用来加密或解密---只要能保证用A加密，就用B解密就行。 
至于A是公钥还是私钥，其实可以根据不同的用途而定。 

例如说， 案例A：如果你想把某个消息秘密的发给某人。 
那你就可以用他的"公钥加密"---因为只有他知道他的私钥，所以这消息也就只有他本人用“私钥”能解开，于是你就达到了你的目的。 

案例B：但是如果你想发布一个公告，需要一个手段来证明这确实是你本人发的，而不是其他人冒名顶替的。 
那你可以在你的公告开头或者结尾附上一段用你的"私钥加密"的内容（例如说就是你公告正文的某一段话）， 
那所有其他人都可以用你的公钥来解密，看看解出来的内容是不是相符的（是否是公告正文的某一段话）。 
如果是的话，那就说明这公告确实是你发的---因为只有你的公钥才能解开你的私钥加密的内容，而其他人是拿不到你的私钥的

证明这消息是你发的-私钥加密

配合md5加密，其实就是保证完整性，与其说是md5是加密，倒不如说是一种验证，
比如说上面的公告，把你md5后的公告传过来，和本地进行md5后的公告比较，如果是一致的话，就保证完整性了，
所以有：加密+md5这一说，也就是后面的数字签名

数字签名无非就两个目的：
1.证明这消息是你发的；
2.证明这消息内容确实是完整的---也就是没有经过任何形式的篡改（包括替换、缺少、新增）。

上面关于“公告”那段内容（私钥加密），已经证明了第一点：证明这消息是你发的。
那么要做到第二点，就是把你公告的原文做一次哈希（md5或者sha1都行），然后用你的私钥加密这段哈希作为签名，并一起公布出去。
当别人收到你的公告时，他可以用你的公钥解密你的签名，如果解密成功，并且解密出来的哈希值确实和你的公告原文的哈希值一致，
那么他就证明了两点：这消息确实是你发的，而且内容是完整的



"非对称加密算法"。
（1）乙方生成两把密钥（公钥和私钥）。公钥是公开的，任何人都可以获得，私钥则是保密的。
（2）甲方获取乙方的公钥，然后用它对信息加密。
（3）乙方得到加密后的信息，用私钥解密。

由于加密和解密使用同样规则（简称"密钥"），这被称为"对称加密算法"
（1）甲方选择某一种加密规则，对信息进行加密；
（2）乙方使用同一种规则，对信息进行解密。
