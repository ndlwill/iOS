==================================================difference between MACOSX_DEPLOYMENT_TARGET and -mmacosx-version-min?

-mmacosx-version-min=version
The earliest version of MacOS X that this executable will run on is
version.  Typical values of version include 10.1, 10.2, and 10.3.9.

This value can also be set with the MACOSX_DEPLOYMENT_TARGET environment
variable.  If both the command-line option is specified and the
environment variable is set, the command-line option will take precedence.

both methods work on macOS until 10.14 (Mojave).
it seems as if the build environment in 10.15 (Catalina) and newer only supports MACOSX_DEPLOYMENT_TARGET.

The variable CMAKE_OSX_DEPLOYMENT_TARGET must initialized as a cache variable prior to the first project() command in order for the Xcode project generation to be picked up properly:
set(CMAKE_OSX_DEPLOYMENT_TARGET "10.9" CACHE STRING "Minimum OS X deployment version")
If not set explicitly as a cache variable the CMAKE_OSX_DEPLOYMENT_TARGET is initialized by the MACOSX_DEPLOYMENT_TARGET environment variable.


==================================================
create the Xcode project like this:
cmake -G Xcode <path>

==================================================
cmake-commands:
##if##
https://cmake.org/cmake/help/v3.2/command/if.html

==================================================
.cmake 文件 是给cmake执行用的

.cmake 文件的作用
就像CMakeList.txt的库一样，加载后可以在CMakeList.txt中使用它的一些函数和定义


==================================================How to create a ProjectConfig.cmake file
cmake-packages
https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html#creating-packages

