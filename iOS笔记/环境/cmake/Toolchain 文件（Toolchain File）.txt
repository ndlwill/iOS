CMake Toolchain File（工具链文件）执行顺序：

CMakeLists.txt
message(STATUS "1: ${CMAKE_OSX_DEPLOYMENT_TARGET}")
set(CMAKE_OSX_DEPLOYMENT_TARGET "17.0" CACHE STRING "Minimum tvos deployment version" FORCE)
message(STATUS "2: ${CMAKE_OSX_DEPLOYMENT_TARGET}")

project(fvclient)
message(STATUS "=====")


iOS.cmake 包含这些打印
-- IOS_PLATFORM = SIMULATOR_TVOS
-- Toolchain using default iOS SDK: /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator18.2.sdk
-- IOS_PLATFORM = SIMULATOR_TVOS


cmake "$PROJECT_DIR" -DCMAKE_TOOLCHAIN_FILE="$PROJECT_DIR/iOS.cmake"

构建日志：
-- 1: 
-- 2: 17.0
-- IOS_PLATFORM = SIMULATOR_TVOS
-- Toolchain using default iOS SDK: /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator18.2.sdk
-- IOS_PLATFORM = SIMULATOR_TVOS
-- The C compiler identification is AppleClang 16.0.0.16000026
-- The CXX compiler identification is AppleClang 16.0.0.16000026
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/gcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- =====
-- Configuring done
-- Generating done
-- Build files have been written to:


#####执行顺序
CMakeLists.txt project(fvclient)之前执行

project(fvclient)执行 // 执行 iOS.cmake，可以做一些配置

CMakeLists.txt project(fvclient)之后执行
#####