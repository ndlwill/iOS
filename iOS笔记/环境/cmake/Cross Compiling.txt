If cmake is invoked with the command line parameter -DCMAKE_TOOLCHAIN_FILE=path/to/file, the file will be loaded early to set values for the compilers.
A typical cross-compiling toolchain has content such as:
set(CMAKE_SYSTEM_NAME Linux)

set(CMAKE_SYSROOT /home/devel/rasp-pi-rootfs)
set(CMAKE_STAGING_PREFIX /home/devel/stage)

set(CMAKE_C_COMPILER /home/devel/gcc-4.7-linaro-rpi-gnueabihf/bin/arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER /home/devel/gcc-4.7-linaro-rpi-gnueabihf/bin/arm-linux-gnueabihf-g++)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

The CMAKE_SYSTEM_NAME is the CMake-identifier of the target platform to build for.
The CMAKE_SYSROOT is optional, and may be specified if a sysroot is available.

The CMAKE_STAGING_PREFIX is also optional. It may be used to specify a path on the host to install to.
The CMAKE_INSTALL_PREFIX is always the runtime installation location, even when cross-compiling.

==================================================CMAKE_SYSTEM_NAME
Name of the OS CMake is building for.

This is the name of the operating system on which CMake is targeting.
On systems that have the uname command, this variable is set to the output of uname -s.
Linux, Windows, and Darwin for Mac OS X are the values found on the big three operating systems.

==================================================CMAKE_SYSROOT
Path to pass to the compiler in the --sysroot flag.

The CMAKE_SYSROOT content is passed to the compiler in the --sysroot flag, if supported.
The path is also stripped from the RPATH/RUNPATH if necessary on installation.
The CMAKE_SYSROOT is also used to prefix paths searched by the find_* commands.

This variable may only be set in a toolchain file specified by the CMAKE_TOOLCHAIN_FILE variable.
