

==================================================Conditional Expressions:
A fundamental category of generator expressions relates to conditional logic. 
Two forms of conditional generator expressions are supported:

$<condition:true_string>
Evaluates to true_string if condition is 1, or an empty string if condition evaluates to 0. 
Any other value for condition results in an error.

$<IF:condition,true_string,false_string>
New in version 3.8.
Evaluates to true_string if condition is 1, or false_string if condition is 0. 
Any other value for condition results in an error.

New in version 3.28: This generator expression short-circuits such that generator expressions in false_string will not evaluate when condition is 1,
and generator expressions in true_string will not evaluate when condition is 0.

Typically, the condition is itself a generator expression.
For instance, the following expression expands to DEBUG_MODE when the Debug configuration is used, and the empty string for all other configurations:

$<$<CONFIG:Debug>:DEBUG_MODE>

Boolean-like condition values other than 1 or 0 can be handled by wrapping them with the $<BOOL:...> generator expression:


==================================================Configuration Expressions:
$<CONFIG>
Configuration name. Use this instead of the deprecated CONFIGURATION generator expression.

$<CONFIG:cfgs>
1 if config is any one of the entries in comma-separated list cfgs, else 0.
This is a case-insensitive comparison.
Changed in version 3.19: Multiple configurations can be specified for cfgs. CMake 3.18 and earlier only accepted a single configuration.