这种可以在我们更改别人代码做实验时使用，既不对其源码进行破坏，又可以添加自己的功能。
之前都是在程序中进行#define，有了这个后可以直接在编译的时候进行选择。
使用add_definitions()函数控制代码的开启和关闭

option(TEST_DEBUG "option for debug" OFF)
if (TEST_DEBUG) 
    add_definitions(-DTEST_DEBUG)
endif(TEST_DEBUG)

cmake -DTEST_DEBUG=1 .. #打开
cmake -DTEST_DEBUG=0 .. #关闭

#ifdef TEST_DEBUG

#else 

#endif

==================================================add_definitions
Adds -D define flags to the compilation of source files.
add_definitions(-DFOO -DBAR ...)

Adds definitions to the compiler command line for sources in the current directory and below.
###
This command can be used to add any flags, but it is intended to add preprocessor definitions.
###
Flags beginning in -D or /D that look like preprocessor definitions are automatically added to the COMPILE_DEFINITIONS directory property for the current directory.
Definitions with non-trivial values may be left in the set of flags instead of being converted for reasons of backwards compatibility.
See documentation of the directory, target, source file COMPILE_DEFINITIONS properties for details on adding preprocessor definitions to specific scopes and configurations.