cmake：CMake 是一个跨平台的构建工具，它使用 CMakeLists.txt 文件来描述项目的构建过程。CMake 会根据这个文件生成平台特定的构建系统（如 Makefile、Xcode 项目等）。开发者通常使用 CMake 来管理和构建复杂的项目，尤其是跨平台项目。

ninja：Ninja 是一个小巧高效的构建系统，专门用于执行构建任务。它通常与 CMake 一起使用，作为 CMake 生成的构建工具（例如 Makefile 或其他构建脚本）的替代品。Ninja 的特点是速度快，适合大规模项目的构建。


CMake 和 Ninja 是构建工具中的两个不同组件，它们在软件开发中扮演不同的角色，但通常一起使用以完成项目的构建和管理。

CMake：CMake 是一个跨平台的构建自动化工具，用于生成项目的构建系统配置文件。
它允许开发者定义项目的结构、依赖关系和构建过程，而不必直接编写特定构建系统（如 Makefile 或 Visual Studio 项目文件）。
CMake 使用CMakeLists.txt文件来描述项目，然后生成适用于不同构建系统的配置文件。CMake 支持生成 Makefile、Ninja、Visual Studio 等构建系统的配置。

Ninja：Ninja 是一个构建系统，专注于快速和高效的构建。
它使用轻量级的 Makefile 语法，并采用增量构建策略，只重新构建发生更改的文件，从而提高构建速度。
Ninja 的主要目标是减少构建系统本身的开销，使项目能够更快地构建。

CMake 和 Ninja 之间的关系通常是这样的：
开发者使用 CMake 来定义项目的结构和依赖关系，创建 CMakeLists.txt 文件。
然后，使用 CMake 生成适用于 Ninja 的构建系统配置文件。这意味着开发者可以选择 Ninja 作为构建系统。
最后，开发者使用 Ninja 来执行实际的构建操作，根据生成的 Ninja 构建文件构建项目。

###
CMake 用于项目配置和生成构建系统配置文件，而 Ninja 用于执行构建操作。
###
这种组合允许开发者更容易地管理和构建复杂的项目，同时保持构建速度和效率。


==================================================使用 CMake 生成 Xcode 项目:
在你的项目目录中创建一个 CMakeLists.txt 文件，其中包含项目的配置和构建信息
这个文件会告诉 CMake 如何生成 Xcode 项目
cmake_minimum_required(VERSION 3.0)
project(MyProject)

# 添加源代码文件
add_executable(MyApp main.cpp)

# 可以添加更多的配置选项和依赖


mkdir build
cd build
cmake -G Xcode ..
上述命令中的 -G Xcode 选项告诉 CMake 生成 Xcode 项目。.. 表示 CMake 在上级目录中查找 CMakeLists.txt 文件。

执行完上述命令后，将在 build 目录中生成 Xcode 项目文件。
进入 build 目录，你会看到一个名为 YourProject.xcodeproj 的 Xcode 项目文件。双击它，打开 Xcode。
在 Xcode 中，你可以构建和运行项目。
这样，你就可以使用 CMake 生成 Xcode 项目并在 Xcode 中进行开发、构建和调试。这对于跨平台项目或需要在不同 IDE 中开发的项目非常有用。

==================================================CMake 生成 Ninja 构建系统配置文件
https://ninja-build.org/
https://github.com/ninja-build/ninja

在你的项目目录中创建一个 CMakeLists.txt 文件，其中包含项目的配置和构建信息。这个文件会告诉 CMake 如何生成 Ninja 构建系统的配置文件。
cmake_minimum_required(VERSION 3.0)
project(MyProject)

# 添加源代码文件
add_executable(MyApp main.cpp)

# 可以添加更多的配置选项和依赖

mkdir build
cd build
cmake -G Ninja ..

将在 build 目录中生成 Ninja 构建系统的配置文件。
接下来，可以使用 Ninja 来构建项目。在终端中进入 build 目录，然后运行以下命令：ninja

==================================================cmake -G
cmake -G 是用于指定生成器的 CMake 命令行选项。不同的生成器用于生成不同的构建系统的项目文件。

以下是一些常见的生成器选项：
Unix Makefiles: 生成适用于 Unix/Linux 系统上的 Makefile 项目。
Ninja: 生成 Ninja 构建系统的配置文件，Ninja 是一种高性能的构建系统。
Visual Studio: 生成 Visual Studio 项目文件，可以使用不同版本的 Visual Studio 打开项目。
Xcode: 生成 Xcode 项目文件，可以在 macOS 上使用 Xcode 打开项目。
CodeBlocks: 生成 Code::Blocks 项目文件，适用于 Code::Blocks 集成开发环境。
Eclipse CDT4: 生成适用于 Eclipse C/C++ 开发工具（CDT）的项目文件。