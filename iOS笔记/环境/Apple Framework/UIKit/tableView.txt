==========beginUpdates和endUpdates
使用beginUpdates和endUpdates可以在改变一些行（row）的高度时自带动画
并且不需要Reload row（不用调用cellForRow，仅仅需要调用heightForRow，这样效率最高）

在beginUpdates和endUpdates中执行insert,delete,select,reload row时，动画效果更加同步和顺滑
否则动画卡顿

在beginUpdates 和 endUpdates中执行 reloadData 方法和直接reloadData一样，没有相应的中间动画


==========不显示没内容的Cell
[tableView registerNib:[UINib nibWithNibName:NSStringFromClass([ExpandCell class]) bundle:nil] forCellReuseIdentifier:@"ExpandID"];
// 写在注册cell的后面  一行代码可以解决UITableView在cell比较少的情况下不显示下面的分割线条
self.tableView.tableFooterView = [[UIView alloc] init];


==========group去掉头部默认高度,设置新高度
table.delegate = self;
table.dataSource = self;
table.tableFooterView = [UIView new];

// group 调整section之间的间距
-(CGFloat)tableView:(UITableView*)tableView heightForHeaderInSection:(NSInteger)section
{
     return 10.f;
}

-(CGFloat)tableView:(UITableView*)tableView heightForFooterInSection:(NSInteger)section

{
      return 0.01f;//设置比0稍微大一点点的方式来改变section footer的高度 不能设置为0没效果
}

==========默认style
UITableViewStylePlain。HeaderInSection有悬浮效果
group没有此效果

==========去掉UITableViewStyleGrouped类型UITableView头部高度
table.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 0, CGFLOAT_MIN)];

==========iOS11 UITbleView适配
// tableView 偏移64适配
if (@available(iOS 11.0, *)) {
    self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;//UIScrollView也适用
}else {
    self.automaticallyAdjustsScrollViewInsets = NO;
}

if (@available(iOS 11.0, *)) {
    _tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    _tableView.contentInset = UIEdgeInsetsMake(64, 0, 49, 0);
    _tableView.scrollIndicatorInsets = _tableView.contentInset;
}


// tableView 如果是Gruop类型的话，section之间的间距变宽，执行返回高度的同时还需要执行return UIView的代理
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 10;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.1;
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    return [[UIView alloc] init];
}
- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    return [[UIView alloc] init];
}


==========
typedef NS_ENUM(NSInteger, UITableViewCellStyle) { 
    UITableViewCellStyleDefault,    // 左侧显示textLabel（不显示detailTextLabel），imageView可选（显示在最左边） 
    UITableViewCellStyleValue1,        // 左侧显示textLabel、右侧显示detailTextLabel（默认蓝色），imageView可选（显示在最左边） 
    UITableViewCellStyleValue2,        // 左侧依次显示textLabel(默认蓝色)和detailTextLabel，imageView可选（显示在最左边） 
    UITableViewCellStyleSubtitle    // 左上方显示textLabel，左下方显示detailTextLabel（默认灰色）,imageView可选（显示在最左边）