总结:
webView.loadRequest是从WKHTTPCookieStore中获取cookie的
就算是新建一个wkwebview然后wkwebView执行loadRequest方法后也不会立刻刷新NS和WK的同步。
###H5使用document.cookie会修改WKHTTPCookieStore的cookie，并且还能够及时同步到NSHTTPCookieStore###

从WKHTTPCookieStore同步到NSHTTPCookieStorage的cookie操作，都是安全的，及时的，因为NSHTTPCookieStorage的cookie操作在主线程操作
从NSHTTPCookieStorage同步到WKHTTPCookieStore的cookie操作，是不安全的，不及时的，因为WKHTTPCookieStore的cookie操作都为异步线程且时机也是无法控制的

cookie的增删改查:
新增cookie: iOS创建cookie时必须包含name,value,domain,path，否则无法创建有效cookie.
修改cookie: domain,path,name一致，既会开始修改.
删除cookie: domain,path,name一致，既会删除.
删除cookie的另外一种方式，就是修改cookie的exprieData设置为过期，则cookieStorage会将cookie删除
若cookie.exprieData=nil时，cookie为会话cookie，只会存活在本次APP生命周期中，杀死app后，cookie就会因为过期而从cookieStorage中删除

NSHTTPCookieStorage与WKHTTPCookieStore的同步问题:
系统确实做了NSHTTPCookieStorage与WKHTTPCookieStore的同步，但是由于WKHTTPCookieStore的cookie操作都是在异步线程，所以从NSHTTPCookieStoreage同步到WKHTTPCookieStore时，会遇到两个问题：1.同步时机不确定 2.同步任务在异步线程
NSHTTPCookieStoreage对URL1新增/修改cookie1后，立刻使webView打开URL1，那么webView的请求时无法获取到新增/修改后的cookie1的。

NSHTTPCookieStorage新增cookie1: WKHTTPCookieStore能够同步到新增的cookie1，但时机并非同步，略有延迟大约在1s之内
NSHTTPCookieStorage修改cookie1: WKHTTPCookieStore能够同步到修改的cookie1，但时机并非同步，略有延迟大约在1s之内
NSHTTPCookieStorage与WKHTTPCookieStore都有cookie1，NSHTTPCookieStoreage删除cookie1: WKHTTPCookieStore删除cookie1的时机无法确定，有时能够删除，有时不能删除。
WKHTTPCookieStore新增cookie1: NSHTTPCookieStorage立刻新增cookie1
WKHTTPCookieStore修改cookie1: NSHTTPCookieStorage立刻修改cookie1
WKHTTPCookieStore删除cookie1: NSHTTPCookieStorage立刻删除cookie1
WKHTTPCookieStore删除cookie的时机比新增/修改cookie时机靠后的多，所以这种时机不确定且线程不同步的情况下会导致偶现的棘手问题：例如，NS和WK中都有cookie1,我在NS中删除了一个cookie1,然后我使用WK新增/修改cookie2操作，那么此时WK会将cookie2与cookie1都同步给NS中。
###所以现在一般要删除一个cookie的话都不会使用删除的方法，而是修改这个cookie.value = nil###



如果新增/修改的cookie.expireData=nil(即会话cookie)，则不会进行同步？
NSHTTPCookieStorage新增一个expireDta=nil的cookie1: NSHTTPCookieStorage中可以打印到cookie1（重启app后cookie1会被清除），而打印WKHTTPCookieStore中所有cookie时，是无法找到cookie1的
NSHTTPCookieStorage与WKHTTPCookieStore都有cookie2，NSHTTPCookieStorage修改cookie2.expireDta=nil: 此时打印NSHTTPCookieStorage的cookies,里面可以找到cookie2，且cookie2.exprieData=nil。但是WKHTTPCookieStore的情况为，有可能cookie2没有发生变化，有可能打印不出来cookie2(因为过期而被删除了)
WK新增一个expireDta=nil的cookie1: WK中可以打印到cookie1（重启app后cookie1会被清除），打印NSCookie中所有cookie时，是无法找到cookie1的
WK与NS都有cookie2,WK修改cookie2.expireDta=nil: NS会立刻同步到修改后的cookie2，但是由于cookie2.exprieData=nil而认定为过期cookie，所以会从NSHTTPCookieStorage中删除


如果新增/修改的cookie.expireData小于当前时间，那会怎么样？
NSHTTPCookieStorage新增一个expireDta小于当前时间的cookie1: cookie1无法添加到NSHTTPCookieStorage，自然也无法添加到WKHTTPCookieStore
NSHTTPCookieStorage与WKHTTPCookieStore都有cookie2, NSHTTPCookieStorage修改cookie2.expireDta小于当前时间: NSHTTPCookieStorage会将cookie2删除。而WKHTTPCookieStore的情况为：有可能cookie2没有变化，有可能打印不出来cookie2(因为过期而被删除了)
WKHTTPCookieStore新增一个expireDta小于当前时间的cookie1: cookie1无法添加到WKHTTPCookieStore，自然也无法添加到NSHTTPCookieStorage
NSHTTPCookieStorage与WKHTTPCookieStore都有cookie2, WKHTTPCookieStore修改cookie2.expireDta小于当前时间: WKHTTPCookieStore修改cookie2会删除cookie2, NSHTTPCookieStorage也会立刻删除cookie2
