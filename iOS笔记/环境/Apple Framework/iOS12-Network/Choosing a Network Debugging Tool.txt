https://developer.apple.com/documentation/network


If you’re working at the HTTP level, you may find that your request makes it to the server and then the server sends you a response indicating that it failed in some way (for example, you get an HTTP response with a status code of 500 Internal Server Error). 
See Debugging HTTP Server-Side Errors and Analyzing HTTP traffic with Instruments.
https://developer.apple.com/documentation/network/debugging-http-server-side-errors
https://developer.apple.com/documentation/foundation/url_loading_system/analyzing_http_traffic_with_instruments


If you’re using URLSession, or one of the subsystems that uses URLSession internally, 
you can enable CFNetwork diagnostic logging to get a detailed view of how your requests were processed. 
See Debugging HTTPS Problems with CFNetwork Diagnostic Logging.
https://developer.apple.com/documentation/network/debugging-https-problems-with-cfnetwork-diagnostic-logging


If you want a low-level view of the traffic exchanged over the network, you need a packet trace. See Recording a Packet Trace.
https://developer.apple.com/documentation/network/recording-a-packet-trace


If you’re working in Safari or one of the various web views (like WKWebView), 
you can use the Web Inspector to view the network requests issued by the page. See Web Development Tools.
https://developer.apple.com/safari/tools/


Some of the most popular network debugging tools, like HTTP debugging proxies, are third-party products. 
See Taking Advantage of Third-Party Network Debugging Tools.
https://developer.apple.com/documentation/network/taking-advantage-of-third-party-network-debugging-tools