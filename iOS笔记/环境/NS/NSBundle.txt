NSString *file = [[NSBundle mainBundle] pathForResource:name ofType:nil];
用来获取 file 的完全路径

NSBundle:
代表了 app 中代码和资源的文件在文件系统里所在的位置，通俗的说，就是定位了程序使用的资源（代码，图形，音乐等数据）在文件系统里的位置

我们的程序是一个bundle
在Finder中,一个应用程序看上去和其他文件没有什么区别. 但是实际上它是一个包含了nib文件,编译代码,以及其他资源的目录. 我们把这个目录叫做程序的main bundle

+ (NSBundle *)mainBundle
返回一个 NSBundle类的对象，这个对象就是一个完全path，这个 path 保存的当前可执行的app路径，或者是 返回nil
NSBundle *bundle = [NSBundle mainBundle];
NSLog(@"bundle = %@", bundle);
// bundle = NSBundle </Users/ndl/Library/Developer/CoreSimulator/Devices/89555224-5B1C-4B9D-A220-174FA28D4692/data/Containers/Bundle/Application/B588250E-D621-44E7-9C46-23E0A5C02C0E/TestRotate.app> (loaded)

app Build之后， 资源文件直接就复制到了根目录下，于是读取的方法，应该是这样：
NSString *earth = [[NSBundle mainBundle] pathForResource:@"Brad Cox" ofType:@"png"]
编译之后，mainBundle的资源都是放到RootFolder下，所以，可以直接访问，不要指定内部路径。通常来说，这个 mainbundle 就是 当前的可执行app 的在根目录下的绝对路径

资源路径:
/Users/ndl/Library/Developer/CoreSimulator/Devices/89555224-5B1C-4B9D-A220-174FA28D4692/data/Containers/Bundle/Application/B588250E-D621-44E7-9C46-23E0A5C02C0E/TestRotate.app/Brad Cox.png


使用其他的Bundle:
使用Custom bundle，访问内部的子文件夹，需要指定inDirectory参数
Resources.bundle包含Images文件夹，Images包含MoreImages文件夹,MoreImages包含Matthijs.png
NSString *resourceBundle = [[NSBundle mainBundle] pathForResource:@"Resources" ofType:@"bundle"];
NSString *earth = [[NSBundle bundleWithPath:resourceBundle] pathForResource:@"Matthijs"ofType:@"jpg"inDirectory:@"Images/MoreImages"];
