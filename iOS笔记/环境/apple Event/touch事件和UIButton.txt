点击按钮查看输出：
Button is inside: 1
Button hit: <JKRButton: 0x7fcef9508ae0; baseClass = UIButton; frame = (100 100; 100 40); opaque = NO; layer = <CALayer: 0x608000023d80>>
Button touches began
Action touch down
Button touches ended
Action touch up inside

Button按钮的点击事件阻断它的父视图的touch方法，所以控制器的touches began方法并没有调用
UIButton的点击事件是通过touch事件来响应的

注释掉UIButton的touches began的super方法
按钮不能够被点击
Button is inside: 1
Button hit: <JKRButton: 0x7fb81b408fe0; baseClass = UIButton; frame = (100 100; 100 40); opaque = NO; layer = <CALayer: 0x60800003f840>> 
Button touches began Button touches ended


注释掉UIButton的touches ended的super方法
Button is inside: 1 Button hit: <JKRButton: 0x7fed2950e140; baseClass = UIButton; frame = (100 100; 100 40); opaque = NO; layer = <CALayer: 0x60000002be60>> Button touches began Action touch down Button touches ended
按钮被点击，但是松开按钮后，按钮不能够从高亮状态恢复


UIButton通过接收到ControlEvent事件来触发点击方法，这里通过给UIButton发送一个事件来触发UIButton的点击方法：
//触发touchDown事件：
[self.button sendActionsForControlEvents:UIControlEventTouchDown];
//触发touchUpInside事件：
[self.button sendActionsForControlEvents:UIControlEventTouchUpInside];


UIButton和手势：
给UIButton添加一个Tap手势：
Tap touchBegan
Button touches began
Action touch down
Tap touchEnded
Tap RecognizerShouldBegin
Tap action
Button touches cancelled
UIButton的touches began方法调用后，会马上出发UIButton的touch down，所有按钮的touch down事件优先于手势事件处理。在touch ended方法的方法调用中，依然和UIView添加手势的顺序一样，手势的touch ended方法优先执行。这时，识别到手势，触发Tap action方法，然后取消UIButton的touch事件，所以UIButton调用touches cancelled方法
按钮的高亮在touches began调用，touches ended恢复，这里由于没有走touches ended。所以可以知道，touches cancelled在没有调用touches ended的情况下，完成了按钮高亮的恢复。
