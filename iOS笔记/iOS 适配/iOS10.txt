相机权限： Privacy - Camera Usage Description 
相册权限： Privacy - Photo Library Usage Description 
通讯录权限： Privacy - Contacts Usage Description  
蓝牙权限：Privacy - Bluetooth Peripheral Usage Description 
定位权限：Privacy - Location When InUseUsageDescription
语音转文字权限：Privacy - Speech RecognitionUsageDescription 
日历权限：Privacy - CalendarsUsageDescription



// 蓝牙
Bluetooth Sharing – NSBluetoothPeripheralUsageDescription
// 日历
Calendar – NSCalendarsUsageDescription
// 电话
CallKit – NSVoIPUsageDescription
// 相机
Camera – NSCameraUsageDescription
// 通讯录
Contacts – NSContactsUsageDescription
// 健康
Health – NSHealthShareUsageDescription & NSHealthUpdateUsageDescription
// HomeKit 
HomeKit – NSHomeKitUsageDescription
// 定位
Location – NSLocationUsageDescription, NSLocationAlwaysUsageDescription, NSLocationWhenInUseUsageDescription
// 媒体资源 
Media Library – NSAppleMusicUsageDescription
// 麦克风
Microphone – NSMicrophoneUsageDescription
// 运动数据
Motion – NSMotionUsageDescription
// 照片
Photos – NSPhotoLibraryUsageDescription
// 提醒
Reminders – NSRemindersUsageDescription
// 语音识别
Speech Recognition – NSSpeechRecognitionUsageDescription
// Siri
SiriKit – NSSiriUsageDescription
// 电视
TV Provider – NSVideoSubscriberAccountUsageDescription

=============UIRefreshControl
在iOS 10 中, UIRefreshControl可以直接在UICollectionView和UITableView中使用
RefreshControl是UIScrollView的一个属性

UIRefreshControl *refreshControl = [[UIRefreshControl alloc] init];
[refreshControladdTarget:self action:@selector(loadData)forControlEvents:UIControlEventValueChanged];
collectionView.refreshControl = refreshControl




=============UICollectionViewCell
iOS 10 之前UICollectionViewCell的生命周期是这样的:

1.用户滑动屏幕,屏幕外有一个cell准备加载进来,把cell从reusr队列拿出来,然后调用prepareForReuse方法,在这个方法里面,可以重置cell的状态,加载新的数据;2.继续滑动,就会调用cellForItemAtIndexPath方法,在这个方法里面给cell赋值模型,然后返回给系统;3.当cell马上进去屏幕的时候,就会调用willDisplayCell方法,在这个方法里面我们还可以修改cell,为进入屏幕做最后的准备工作;4.执行完willDisplayCell方法后,cell就进去屏幕了.当cell完全离开屏幕以后,会调用didEndDisplayingCell方法.

iOS 10 UICollectionViewCell的生命周期是这样的:

1.用户滑动屏幕,屏幕外有一个cell准备加载进来,把cell从reusr队列拿出来,然后调用prepareForReuse方法,在这里当cell还没有进去屏幕的时候,就已经提前调用这个方法了,对比之前的区别是之前是cell的上边缘马上进去屏幕的时候就会调用该方法,而iOS 10 提前到cell还在屏幕外面的时候就调用;2.在cellForItemAtIndexPath中创建cell，填充数据，刷新状态等操作,相比于之前也提前了;3.用户继续滑动的话,当cell马上就需要显示的时候我们再调用willDisplayCell方法,原则就是:何时需要显示,何时再去调用willDisplayCell方法;4.当cell完全离开屏幕以后,会调用didEndDisplayingCell方法,跟之前一样,cell会进入重用队列.在iOS 10 之前,cell只能从重用队列里面取出,再走一遍生命周期,并调用cellForItemAtIndexPath创建或者生成一个cell.在iOS 10 中,系统会cell保存一段时间,也就是说当用户把cell滑出屏幕以后,如果又滑动回来,cell不用再走一遍生命周期了,只需要调用willDisplayCell方法就可以重新出现在屏幕中了.iOS 10 中,系统是一个一个加载cell的,二以前是一行一行加载的,这样就可以提升很多性能;


iOS 10 新增加的Pre-Fetching预加载


if ([[UIDevice currentDevice].systemVersion floatValue] >= 10.0) {
            [[UIApplication sharedApplication]openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString] options:@{} completionHandler:nil];
         } else {
            [[UIApplication sharedApplication] openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString]];
         }