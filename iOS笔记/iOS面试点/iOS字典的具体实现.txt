NSDictionary（字典）是使用 hash表来实现key和value之间的映射和存储的， hash函数设计的好坏影响着数据的查找访问效率。数据在hash表中分布的越均匀，其访问效率越高。而在Objective-C中，通常都是利用NSString 来作为键值，其内部使用的hash函数也是通过使用 NSString对象作为键值来保证数据的各个节点在hash表中均匀分布。
key 通过 哈希函数得到哈希值
哈希值取余或者某种算法数组扩充阈值得到索引
根据索引存储 value
哈希冲突是开放定址法 重新把扩充阈值+1或者-1 再次哈希得到索引 或者直接索引+1


哈希表中的开放地址法（Open Addressing）是解决哈希冲突的一种方法。
线性探测法（Linear Probing）是开放地址法中的一种具体策略。

开放地址法的核心思想是：
当哈希冲突发生时，不是用链表或其他结构存储多个元素，而是在哈希表内部继续寻找空位置来放置冲突的元素。

常见的开放地址法探测策略有：
线性探测（Linear Probing）
二次探测（Quadratic Probing）
双重哈希（Double Hashing）

