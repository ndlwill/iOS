1、物理按键
XCUIDevice *device = [XCUIDevice sharedDevice];
    
//Home键
[device pressButton:XCUIDeviceButtonHome];

//音量键
[device pressButton:XCUIDeviceButtonVolumeUp];
[device pressButton:XCUIDeviceButtonVolumeDown];

UIDeviceOrientation orientation = device.orientation;

//将画面转成直向 Portrait
device.orientation = UIDeviceOrientationPortrait;

//将画面转成直向 Portrait Upside Down
device.orientation = UIDeviceOrientationPortraitUpsideDown;

//将画面转成横向 Landscape Left
device.orientation = UIDeviceOrientationLandscapeLeft;

//将画面转成横 Landscape Right
device.orientation = UIDeviceOrientationLandscapeRight;

2、判断是否可点击
XCUIElement *tabLiveButton =  tabBarsQuery.buttons[@"tab live"];
//是否存在
BOOL exists = tabLiveButton.exists；
//是否可见
BOOL hittable = tabLiveButton.hittable；

3、CollectionView滑动操作
XCUIApplication *application = [[XCUIApplication alloc] init];

// 找到当前界面上所有的collectionView   
XCUIElementQuery *collectionViewsQuery = application.collectionViews;
NSInteger queryCount = collectionViewsQuery.count;

//给出一个frame，用来匹配想要操作的collectionView
CGRect colletionFrame = CGRectMake(0, 64, 375.0, 667.0 - 64);

for (int i = 0; i < queryCount; i++) {
XCUIElement *collection = collectionViewsQuery.allElementsBoundByIndex[i];

CGRect tempFrame = collection.frame;

if (CGRectContainsRect(colletionFrame, tempFrame) && [collection canOperateElement]) {
    self.collectionView = collection;            
}
}
//滑动操作
[self.collectionView swipeUp];
[self.collectionView swipeDown];

4、cell查找并点击
//当前找到的collectionView中的cell
self.cells = [self.collectionView descendantsMatchingType:XCUIElementTypeCell];
NSInteger cellCount = self.cells.count;
if (cellCount > 0) {        
    XCUIElement *lastCell = self.cells.allElementsBoundByIndex[cellCount -1];
    //滑动到最后
    if ([self.collectionView canOperateElement]) {
    XCUIElement *lastCell = self.cells.allElementsBoundByIndex[cellCount -1];
    //这里应该还有个滑动查找的过程，后续讲解
    if ([lastCell canOperateElement]) {
        //进行点击操作
        [lastCell tap];
    }
}

5、UITesting框架中提供的wait方法：
- (void)waitForExpectationsWithTimeout:(NSTimeInterval)timeout handler:(nullable XCWaitCompletionHandler)handler;