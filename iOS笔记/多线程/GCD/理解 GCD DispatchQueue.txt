class TestClass {
    /**
     DispatchQueue.global().async:
     
     111
     state 0 <_NSMainThread: 0x6000017000c0>{number = 1, name = main}
     333
     =====5秒后=====
     bb
     222
     state 1 <NSThread: 0x60000170b880>{number = 3, name = (null)}
     aa
     viewDidAppear
     
     DispatchQueue.main.async:
     111
     state 0 <_NSMainThread: 0x600001708000>{number = 1, name = main}
     =====5秒后=====
     bb
     222
     333
     state 1 <_NSMainThread: 0x600001708000>{number = 1, name = main}
     aa
     viewDidAppear
     */
    private let queue = DispatchQueue(label: "private queue")
    
    /**
     DispatchQueue.global().async:
     
     111
     state 0 <_NSMainThread: 0x600001710000>{number = 1, name = main}
     333
     state 1 <NSThread: 0x600001727440>{number = 6, name = (null)}
     aa
     =====5秒后=====
     bb
     222
     viewDidAppear
     
     DispatchQueue.main.async:
     111
     state 0 <_NSMainThread: 0x600001708000>{number = 1, name = main}
     =====5秒后=====
     bb
     222
     333
     state 1 <_NSMainThread: 0x600001708000>{number = 1, name = main}
     aa
     viewDidAppear
     */
//    private let queue = DispatchQueue(label: "private queue", attributes: .concurrent)
    
    var _state: String = ""
    var count = 0
    var state: String {
        get {
            queue.sync {
                
                if count == 0 {
                    print("state 0", Thread.current)
                    count += 1
                    sleep(5)
                } else {
                    print("state 1", Thread.current)
                }
                
                return _state
                
            }
        }
      set { queue.sync { _state = newValue } }
    }
}

class ViewController: UIViewController {
    
    let cls = TestClass()

    override func viewDidLoad() {
        super.viewDidLoad()
        
        print("111")
        
//        DispatchQueue.main.async {
//            print("333")
//            print("aa", self.cls.state)
//        }
        
        DispatchQueue.global().async {
            print("333")
            print("aa", self.cls.state)
        }
        print("bb", cls.state)
        
        print("222")
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        print("viewDidAppear")
    }

}