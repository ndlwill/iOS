Light Mode
Name	Color	Hex String	RGBA
label		#000000ff	rgba(0.0, 0.0, 0.0, 1.0)
secondaryLabel		#3c3c4399	rgba(60.0, 60.0, 67.0, 0.6)
tertiaryLabel		#3c3c434c	rgba(60.0, 60.0, 67.0, 0.3)
quaternaryLabel		#3c3c432d	rgba(60.0, 60.0, 67.0, 0.18)
systemFill		#78788033	rgba(120.0, 120.0, 128.0, 0.2)
secondarySystemFill		#78788028	rgba(120.0, 120.0, 128.0, 0.16)
tertiarySystemFill		#7676801e	rgba(118.0, 118.0, 128.0, 0.12)
quaternarySystemFill		#74748014	rgba(116.0, 116.0, 128.0, 0.08)
placeholderText		#3c3c434c	rgba(60.0, 60.0, 67.0, 0.3)
systemBackground		#ffffffff	rgba(255.0, 255.0, 255.0, 1.0)
secondarySystemBackground		#f2f2f7ff	rgba(242.0, 242.0, 247.0, 1.0)
tertiarySystemBackground		#ffffffff	rgba(255.0, 255.0, 255.0, 1.0)
systemGroupedBackground		#f2f2f7ff	rgba(242.0, 242.0, 247.0, 1.0)
secondarySystemGroupedBackground		#ffffffff	rgba(255.0, 255.0, 255.0, 1.0)
tertiarySystemGroupedBackground		#f2f2f7ff	rgba(242.0, 242.0, 247.0, 1.0)
separator		#3c3c4349	rgba(60.0, 60.0, 67.0, 0.29)
opaqueSeparator		#c6c6c8ff	rgba(198.0, 198.0, 200.0, 1.0)
link		#007affff	rgba(0.0, 122.0, 255.0, 1.0)
darkText		#000000ff	rgba(0.0, 0.0, 0.0, 1.0)
lightText		#ffffff99	rgba(255.0, 255.0, 255.0, 0.6)
systemBlue		#007affff	rgba(0.0, 122.0, 255.0, 1.0)
systemGreen		#34c759ff	rgba(52.0, 199.0, 89.0, 1.0)
systemIndigo		#5856d6ff	rgba(88.0, 86.0, 214.0, 1.0)
systemOrange		#ff9500ff	rgba(255.0, 149.0, 0.0, 1.0)
systemPink		#ff2d55ff	rgba(255.0, 45.0, 85.0, 1.0)
systemPurple		#af52deff	rgba(175.0, 82.0, 222.0, 1.0)
systemRed		#ff3b30ff	rgba(255.0, 59.0, 48.0, 1.0)
systemTeal		#5ac8faff	rgba(90.0, 200.0, 250.0, 1.0)
systemYellow		#ffcc00ff	rgba(255.0, 204.0, 0.0, 1.0)
systemGray		#8e8e93ff	rgba(142.0, 142.0, 147.0, 1.0)
systemGray2		#aeaeb2ff	rgba(174.0, 174.0, 178.0, 1.0)
systemGray3		#c7c7ccff	rgba(199.0, 199.0, 204.0, 1.0)
systemGray4		#d1d1d6ff	rgba(209.0, 209.0, 214.0, 1.0)
systemGray5		#e5e5eaff	rgba(229.0, 229.0, 234.0, 1.0)
systemGray6		#f2f2f7ff	rgba(242.0, 242.0, 247.0, 1.0)

Dark Mode
Name	Color	Hex String	RGBA
label		#ffffffff	rgba(255.0, 255.0, 255.0, 1.0)
secondaryLabel		#ebebf599	rgba(235.0, 235.0, 245.0, 0.6)
tertiaryLabel		#ebebf54c	rgba(235.0, 235.0, 245.0, 0.3)
quaternaryLabel		#ebebf52d	rgba(235.0, 235.0, 245.0, 0.18)
systemFill		#7878805b	rgba(120.0, 120.0, 128.0, 0.36)
secondarySystemFill		#78788051	rgba(120.0, 120.0, 128.0, 0.32)
tertiarySystemFill		#7676803d	rgba(118.0, 118.0, 128.0, 0.24)
quaternarySystemFill		#7676802d	rgba(118.0, 118.0, 128.0, 0.18)
placeholderText		#ebebf54c	rgba(235.0, 235.0, 245.0, 0.3)
systemBackground		#000000ff	rgba(0.0, 0.0, 0.0, 1.0)
secondarySystemBackground		#1c1c1eff	rgba(28.0, 28.0, 30.0, 1.0)
tertiarySystemBackground		#2c2c2eff	rgba(44.0, 44.0, 46.0, 1.0)
systemGroupedBackground		#000000ff	rgba(0.0, 0.0, 0.0, 1.0)
secondarySystemGroupedBackground		#1c1c1eff	rgba(28.0, 28.0, 30.0, 1.0)
tertiarySystemGroupedBackground		#2c2c2eff	rgba(44.0, 44.0, 46.0, 1.0)
separator		#54545899	rgba(84.0, 84.0, 88.0, 0.6)
opaqueSeparator		#38383aff	rgba(56.0, 56.0, 58.0, 1.0)
link		#0984ffff	rgba(9.0, 132.0, 255.0, 1.0)
darkText		#000000ff	rgba(0.0, 0.0, 0.0, 1.0)
lightText		#ffffff99	rgba(255.0, 255.0, 255.0, 0.6)
systemBlue		#0a84ffff	rgba(10.0, 132.0, 255.0, 1.0)
systemGreen		#30d158ff	rgba(48.0, 209.0, 88.0, 1.0)
systemIndigo		#5e5ce6ff	rgba(94.0, 92.0, 230.0, 1.0)
systemOrange		#ff9f0aff	rgba(255.0, 159.0, 10.0, 1.0)
systemPink		#ff375fff	rgba(255.0, 55.0, 95.0, 1.0)
systemPurple		#bf5af2ff	rgba(191.0, 90.0, 242.0, 1.0)
systemRed		#ff453aff	rgba(255.0, 69.0, 58.0, 1.0)
systemTeal		#64d2ffff	rgba(100.0, 210.0, 255.0, 1.0)
systemYellow		#ffd60aff	rgba(255.0, 214.0, 10.0, 1.0)
systemGray		#8e8e93ff	rgba(142.0, 142.0, 147.0, 1.0)
systemGray2		#636366ff	rgba(99.0, 99.0, 102.0, 1.0)
systemGray3		#48484aff	rgba(72.0, 72.0, 74.0, 1.0)
systemGray4		#3a3a3cff	rgba(58.0, 58.0, 60.0, 1.0)
systemGray5		#2c2c2eff	rgba(44.0, 44.0, 46.0, 1.0)
systemGray6		#1c1c1eff	rgba(28.0, 28.0, 30.0, 1.0)


颜色适配
1、使用系统提供的颜色
系统颜色 Dynamic colors
iOS 13，系统为我们提供了很多的颜色，使用这些颜色，开发者什么都不需要做，系统会自动完成暗黑模式的适配。

2、在Assets.xcassets中自定义颜色
if (@available(iOS 11.0, *)) {
    UIColor *color = [UIColor colorNamed:@"LightAndDarkHeaderColor"];
} else {
     // Fallback on earlier versions
}

3、使用UIColor新提供的方法
UIColor *color1 = nil;
if (@available(iOS 13.0, *)) {
    color1 = [UIColor colorWithDynamicProvider:^UIColor * _Nonnull(UITraitCollection * _Nonnull traitCollection) {
        if (traitCollection.userInterfaceStyle == UIUserInterfaceStyleDark) {
            return [UIColor redColor];
        } else {
            return [UIColor greenColor];
        }
    }];
    
    UIColor *color2 = [[UIColor alloc] initWithDynamicProvider:^UIColor * _Nonnull(UITraitCollection * _Nonnull traitCollection) {
       if (traitCollection.userInterfaceStyle == UIUserInterfaceStyleDark) {
                return [UIColor redColor];
            } else {
                return [UIColor greenColor];
            }
        }];
    self.view.backgroundColor = color1;
    
} else {
    
}
self.view.backgroundColor = color1;

二、图片资源适配
1、SF Symbols
SF Symbols是一个巨大的矢量图标库（超过1500），可供开发人员在自己的 App 中使用。
https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/

https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.apple.com%2Fdesign%2Fdownloads%2FSF-Symbols.dmg

如果你使用了苹果给开发者提供的 SF Symbols 图标符号库，那么模式切换什么都不用做

if (@available(iOS 13.0, *)) {
    UIImage *normalImage = [UIImage systemImageNamed:@"star.fill"];
    [btn setImage:normalImage forState:UIControlStateNormal];
}
2、Assets.xcassets 适配图片
切换模式的时候，系统会自动加载不同模式下的图片
self.localImageView.image = [UIImage imageNamed:@"LightAndDarkHeaderImage"];

三、监听当前View或者VC的模式改变
使用- (void)traitCollectionDidChange:(UITraitCollection *)previousTraitCollection回调方法
监听当前层级模式是否发生变化，来修改相关控件的显示样式。

- (void)createUI {
    if (@available(iOS 13.0, *)) {
        self.layerColor = [UIColor colorWithDynamicProvider:^UIColor * _Nonnull(UITraitCollection * _Nonnull traitCollection) {
            if (traitCollection.userInterfaceStyle == UIUserInterfaceStyleDark) {
                return [UIColor redColor];
            } else {
                return [UIColor greenColor];
            }
        }];
        self.layer = [CALayer layer];
        self.layer.frame = CGRectMake(100, 100, 100, 100);
        self.layer.backgroundColor = self.layerColor.CGColor;
        [self.view.layer addSublayer:self.layer];
    }
}
// 当iOS界面环境发生变化时，系统调用该方法。
- (void)traitCollectionDidChange:(UITraitCollection *)previousTraitCollection {
    [super traitCollectionDidChange:previousTraitCollection];
    if (@available(iOS 13.0, *)) {
        // 判断当前的颜色是否发生变化，因为屏幕旋转也会走该回调
        if ([self.traitCollection hasDifferentColorAppearanceComparedToTraitCollection:previousTraitCollection]) {
            
            // 设置layer的背景颜色
            self.layer.backgroundColor = self.layerColor.CGColor;
        }
    }
}