上传纹理数据指的就是：
将 CPU 端（内存中的）图像像素数据传输到 GPU 中，并存储在指定的纹理对象（texture）中，供后续渲染使用。


你的图像数据（CPU 端）
    ↓
glTexImage2D(...)
    ↓
对应的 GPU 纹理对象（textureName）


假设你有一张图片（或一帧视频数据），你用 glTexImage2D 把它上传给 GPU 的纹理对象：
GLuint texture;
glGenTextures(1, &texture);                         // 创建纹理对象
glBindTexture(GL_TEXTURE_2D, texture);              // 绑定纹理对象

// 设置纹理参数（如过滤器、边界处理等）
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

// 上传像素数据（真正把 CPU 数据传到 GPU）
glTexImage2D(GL_TEXTURE_2D,      // target
             0,                  // mipmap level
             GL_RGBA,            // internal format on GPU
             width, height,      // 尺寸
             0,                  // border，必须是 0
             GL_BGRA,            // 数据的格式（CPU 侧）
             GL_UNSIGNED_BYTE,   // 数据类型
             imageData);         // 实际像素数据（来自 CPU）
这里 imageData 就是你在 CPU 内存中的图像数据，比如从图片、摄像头、视频帧里拿到的一块像素 buffer。

上传之后，数据就被复制到了 GPU 显存中，和 textureName 绑定在一起了。
你后面在片元着色器（fragment shader）中使用这个纹理采样时，就能获取这些数据。

