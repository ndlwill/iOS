强制生成默认函数的关键字default
C++11可以让你更好的控制要使用的默认函数。假设你要使用某个默认的函数，但是因为一些原因这个函数没有默认生成。比如：我们提供了拷贝构造，就不会生成默认的拷贝构造，那么我们可以使用default关键字显示指定拷贝构造生成

class Person
{
public:
	Person() = default;

	Person(const char* name, int age = 0)//显示的写了构造函数，编译器就不会生成默认的构造函数
		:_name(name)
		, _age(age)
	{}

private:
	string _name;
	int _age;
};

int main()
{
	Person s1("fl",10);//调用显示的拷贝构造
	Person s2;//调用default生成的默认拷贝构造
	return 0;
}

禁止生成默认函数的关键字delete
如果能想要限制某些默认函数的生成，在C++98中，是该函数设置成private，并且只声明补丁已，这样只要其他人想要调用就会报错。
在C++11中更简单，只需在该函数声明加上=delete即可，该语法指示编译器不生成对应函数的默认版本，称=delete修饰的函数为删除函数
class Person
{
public:
	Person()
	{}
	Person(const Person& p) = delete;
private:
	string _name;
	int _age;
};

int main()
{
	Person s2;
	Person s3 = s2;//调用delete删除的拷贝构造，报错
	return 0;
}
