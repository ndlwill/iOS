1、capacity
指容器在分配新的存储空间之前能存储的元素总数。
2、size
指当前容器所存储的元素个数

1、reserve()只修改capacity大小，不修改size大小，
2、resize()既修改capacity大小，也修改size大小。
注意：resize只会在修改后的size()大小大于当前capacity()大小时才会修改capacity大小


为何要有reserve?
关于STL容器，最令人称赞的特性之一就是是只要不超过它们的最大大小，它们就可以自动增长到足以容纳你放进去的数据。
（要知道这个最大值，只要调用名叫max_size的成员函数。）对于vector和string，如果需要更多空间，就以类似realloc的思想来增长大小。
vector容器支持随机访问，因此为了提高效率，它内部使用动态数组的方式实现的。在通过 reserve() 来申请特定大小的时候总是按指数边界来增大其内部缓冲区。
当进行insert或push_back等增加元素的操作时，如果此时动态数组的内存不够用，就要动态的重新分配当前大小的1.5~2倍的新内存区，再把原数组的内容复制过去。
所以，在一般情况下，其访问速度同一般数组，只有在重新分配发生时，其性能才会下降。正如上面的代码告诉你的那样。
而进行pop_back操作时，capacity并不会因为vector容器里的元素减少而有所下降，还会维持操作之前的大小。对于vector容器来说，

如果有大量的数据需要进行push_back，

应当使用reserve()函数提前设定其容量大小，否则会出现许多次容量扩充操作，导致效率低下。