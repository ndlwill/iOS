

Babel是一款流行的JavaScript编译器，它能将ES6+的语法转换为ES5语法，从而使得代码能够兼容更多的浏览器和设备。
同时也提供了CLI、Webpack Loader和Gulp插件等多种使用方式，非常适合用于大型项目的开发。

TypeScript是一种由微软开发的开源编程语言，它是JavaScript的一个超集，其编译器可以将TypeScript代码转换为JavaScript代码。
TypeScript通过类型检查可以提高代码健壮性和可读性，由于支持ES6语法，因此可以方便地与其他JavaScript工具和框架进行集成，例如Webpack、Angular和React等框架。

// 深拷贝
const obj3 = { a: 0, b: { c: 0 } };
const obj4 = JSON.parse(JSON.stringify(obj3));
obj3.a = 4;
obj3.b.c = 4;
console.log(obj4); // { a: 0, b: { c: 0 } }


# 使用nrm工具切换淘宝源
npx nrm use taobao

# 如果之后需要切换回官方源可使用
npx nrm use npm

Yarn是 Facebook 提供的替代 npm 的工具，可以加速 node 模块的下载。
npm install -g 
安装完 yarn 之后就可以用 yarn 代替 npm 了，例如用yarn代替npm install命令，用yarn add 某第三方库名代替npm install 某第三方库名。

创建新项目:
npx react-native@latest init AwesomeProject

你可以使用--version参数（注意是两个杠）创建指定版本的项目。注意版本号必须精确到两个小数点。
npx react-native@X.XX.X init AwesomeProject --version X.XX.X
还可以使用--template来使用一些社区提供的模板。

编译并运行 React Native 应用
cd AwesomeProject
yarn ios
或者
yarn react-native run-ios
注意 0.60 版本之后的主项目文件是`.xcworkspace`，不是`.xcodeproj`


==================================================import & export
the different ways of exporting and the corresponding way to import it
It really distills to 3 types: name, default, and list.

// Name Export | Name Import
export const name = 'value'
import { name } from '...'

// Default Export | Default Import
export default 'value'
import anyName from '...'

// Rename Export | NameImport
export { name as newName }
import { newName } from '...'

// Name + Default | Import All
export const name = 'value'
export default 'value'
import * as anyName from '...'

// Export List + Rename | Import List + Rename
export {
  name1,
  name2 as newName2
}
import {
  name1 as newName1,
  newName2
} from '...'

1.Name
export const name = 'value';
import { name } from 'some-path/file';

2.Default
export default 'value'
import anyName from 'some-path/file';

❌ No Variable Declaration with Default
export default const name = 'value'; // don't try to give me a name!

Mixing Default + Name
export const name = 'value';
export default 'value'
import anyName, { name } from 'some-path/file';

3.Export List
const name1 = 'value1';
const name2 = 'value2';

export {
  name1,
  name2
}

import {
  name1,
  name2
} from 'some-path/file'

4.Renaming Export
const name = 'value'

export {
  name as newName
}
import { newName } from 'some-path/file'

5.Renaming Import
const name1 = 'value1';
const name2 = 'value2';

export {
  name1,
  name2 as newName2
}

import {
  name1 as newName1,
  newName2
} from '...'

console.log(newName1); // 'value1'
console.log(newName2); // 'value2'

❌
name1; // undefined
name2; // undefined

6.Import All
export const name = 'value';
export default 'defaultValue';

import * as anyName from 'some-path/file';
console.log(anyName.name); // 'value'
console.log(anyName.default); // 'defaultValue'
