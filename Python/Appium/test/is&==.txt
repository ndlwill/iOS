在 Python 中，”==” 和 “is” 的区别可类比这个例子 ，前者是相等性比较，比较的是两个对象中的值是否相等，后者是一致性比较，比较的是两个对象的内存空间地址是否相同。

如果内存地址相同，那么他们的值肯定也是一样的，因此，如果 “is” 返回 True，那么 “==” 一定也返回 True

先创建一个列表对象，然后给它指定一个名字 a，再定义另外一个变量 b，让它指向同一个对象。
a 和 b 打印的值都是相等的，因为这两个变量指向的是同一个对象
is 和 == 都返回 True

创建一个新的对象，尽管值是一样的，但是他们本质上是两个不同的对象，处在两个不同的内存空间，因此 "is" 返回的是 False。

有且当仅比较的两个变量指向同一个对象时 "is" 才返回 True，而 "==" 最终取决于对象的__eq__()方法，本质上两个变量进行 "==" 比较操作调用的是对象的__eq__()方法。