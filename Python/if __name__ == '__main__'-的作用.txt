Python是一种解释型脚本语言
Python程序运行时是从模块顶行开始，逐行进行翻译执行

Python解释器在导入模块时，会将模块中没有缩进的代码全部执行一遍
（模块就是一个独立的Python文件）

__name__属性是Python的一个内置属性，记录了一个字符串。
若是在当前文件，__name__ 是__main__。
若是导入的文件，__name__是模块名。

###
因此__name__ == '__main__' 就表示在当前文件中，可以在if __name__ == '__main__':条件下写入测试代码，如此可以避免测试代码在模块被导入后执行。
###

一个python文件通常有两种使用方法，第一是作为脚本直接执行，第二是 import 到其他的 python 脚本中被调用（模块重用）执行。
因此 if __name__ == 'main': 的作用就是控制这两种情况执行代码的过程，在 if __name__ == 'main': 下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。

模块导入:
当我们把模块A中的代码在模块B中进行import A时，只要B模块代码运行到该import语句，模块A的代码会被执行。