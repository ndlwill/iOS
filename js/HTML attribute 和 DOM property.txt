attribute 一般被翻译为“特性”，property 被译为“属性”。

<input id="name" value="justjavac" />
我们写了一个 input 标签，并给他定义了 2 个特性 (id 和 value)。
当浏览器解析这段代码的时候，会把 html 源码解析为 DOM 对象，确切的说是解析为 HTMLInputElement 对象。

HTMLInputElement
  ↓
HTMLElement
  ↓
Element
  ↓
Node
  ↓
EventTarget
  ↓
Object


attributes:
https://developer.mozilla.org/zh-CN/docs/Web/API/Element/attributes


当浏览器解析网页时，将 HTML 特性映射为了 DOM 属性。
而 Element 类还有一个 attributes 属性，里面包含了所有的特性。
但是，HTML attribute 和 DOM property 并不总是一对一的关系。
1. DOM 属性
当浏览器解析完 HTML 后，生成的 DOM 是一个继承自 Object 的常规 JavaScript 对象，因此我们可以像操作任何 JS 对象那样来操作 DOM 对象。

2. HTML 特性
和 DOM 属性类似，除了那些规范里定义的标准特性外，HTML 也可以添加非标准的属性，例如：
<input id="name" value="justjavac" foo="bar" />
当 HTML 特性映射为 DOM 属性时，只映射标准属性，访问非标准属性将得到 undefined。
const el = document.getElementById('name')
el.foo === undefined

DOM 对象也提供了操作特性的 API：
Element.hasAttribute(name) – 判断某个特性是否存在
elem.getAttribute(name) – 获取指定特性的值
elem.setAttribute(name, value) – 设置指定特性的值
elem.removeAttribute(name) – 移除指定特性

根据 HTML 规范，标签以及特性名是不区分大小写的，因此以下代码是一样的：
el.getAttribute('id')
el.getAttribute('ID')
el.getAttribute('iD')
并且，特性永远都是字符串或 null。如果我们为特性设置非字符串的值，则引擎会将此值转换为字符串。属性是具有类型的：

el.getAttribute('checked') === '' // 特性是字符串
el.checked === false              // 属性是 boolean 类型的值

el.getAttribute('style') === 'color:blue' // 特性是字符串
typeof el.style === 'object'                 // 属性是 CSSStyleDeclaration 对象

即使都是字符串，属性和特性也可能不同，有一个例外就是 href：

el.getAttribute('href') === '#tag' // 特性原样返回 html 设置的值
el.href === 'http://jjc.fun#tag'   // 属性返回解析后的完整 uri

3. 特性和属性的同步
当标准的特性更新时，对应的属性也会更新；反之亦然。
但是 input.value 的同步是单向的，只是 attribute --> property。当修改特性时，属性也会更新；但是修改属性后，特性却还是原值。

el.setAttribute('value', 'jjc');  // 修改特性
el.value === 'jjc'                // 属性也更新了  

el.value = 'newValue';            // 修改属性 
el.getAttribute('value')) === 'jjc' // 特性没有更新

4. 非标准特性
非标准 HTML 特性并不会自动映射为 DOM 属性。当我们使用 data- 开头的特性时，会映射到 DOM 的 dataset 属性。中划线格式会变成驼峰格式：

el.setAttribute('data-my-name', 'jjc');
el.dataset.myName === 'jjc'

el.setAttribute('data-my-AGE', 18);
el.dataset.myAge === '18'


自定义特性 VS 非规范特性
HTML 允许我们自定义标签，也可以扩展标签的特性，但是我们推荐使用已经进入 HTML5 规范的自定义特性 data-*。比如我们想为div 标签增加一个 age 特性，我们可以有 2 种选择：

<div age="18">justjavac</div>
<div data-age="18">justjavac</div>
虽然第一种代码更短，但是却有一个潜在的风险。因为 HTML 规范是一直发展变化的，也许在未来的某个版本中，age 被添加进了标准特性里面，这将会引起潜在的 bug。