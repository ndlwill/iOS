typename 主要用于 模板编程，但它并不仅仅用于模板。

1. 用于模板中，指定依赖类型（Dependent Type）
template <typename T>
void PrintList(const std::list<T>& lst) {
    typename std::list<T>::const_iterator it = lst.begin(); // 依赖类型，需加 typename
    while (it != lst.end()) {
        std::cout << *it << " ";
        ++it;
    }
    std::cout << std::endl;
}


2. typename 作为别名定义（C++11+ 的 using 语法）
在 C++11 及以上，typename 可以用来 创建类型别名，和 typedef 类似。

template <typename T>
using Ptr = T*;  // 使用 typename 定义别名

int main() {
    Ptr<int> p = new int(42); // 等价于 int* p
    std::cout << *p << std::endl;
    delete p;
}

等价写法（旧的 typedef 方式）
template <typename T>
typedef T* Ptr;