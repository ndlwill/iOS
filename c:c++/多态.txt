静态多态：函数重载和运算符重载属于静态多态，复用函数名（编译期多态）；
动态多态：派生类和虚函数实现运行时多态（运行期多态）。


动态多态的实现
加上virtual关键字后函数就变成了虚函数，程序运行的时候才确定Material()函数的地址。


动态多态的满足条件
1、有继承关系；
2、子类重写父类中的虚函数。

动态多态使用:
父类指针或引用指向子类对象


多态内部原理:
当我们继承了父类中的函数的时候，那仅仅是继承了这个函数，其内部是通过虚函数表指针(vfptr)的和虚函数表（vftable）来控制的，
vfptr又指向vftable，vftable内存放了所有父类的函数地址，vfptr就指向这些地址，
所以子类的内部就固定存在父类的一份vfptr和vftable拷贝，这是最一般的情况。

但是当我们将父类的函数改为虚函数的时候，且在子类重写父类的虚函数，那就不一样了
当我们用父类指针指向子类对象的时候，vftable中同名函数的作用域就从父类变成的子类，相当于把父同名类函数的地址改为子类同名函数的地址。