list（列表）是顺序容器，其中存储的元素并不是内存连续的
它允许程序员在 list 的任意位置插入元素，而不会造成很大的开销。不过，就随机访问而言，list 比 vector 慢

vector（向量）容器中的元素在内存中是连续存储的
元素相邻存储的好处是随机访问非常方便，可以像类似于C语言数组那样通过下标访问各个元素，
但是插入元素开销就比较大了，因为每插入一个元素，都必须移动其他所有元素。

#include <list>
list 容器类在 std 命名空间中，因此声明一个 list 容器类对象可以按照下面这种方式：
std::list<objType> obj;

我们可以在定义 list 容器类对象时对其初始化（需要c++11支持）
std::list<int> mylist = {1, 1, 2, 3, 5};

迭代器可以通过成员函数 begin() 和 end() 辅助使用

insert(pos, num_elem, elem)
其中 pos 表示将要插入的位置；num_elem 表示要插入的元素数，默认是 1；elem 则表示要插入的元素

push_back() 和 push_front() 函数
list 容器类是一个双向的列表类，因此可以双向插入。push_back() 函数可以将元素插入到 list 容器的尾部，

pop_back() 和 pop_front() 函数

size()，empty()，erase()，clear() 函数

front()，back()，swap()，reverse()，sort()函数