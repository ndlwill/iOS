函数声明
int sprintf(char *string, char *format [,argument,...]);
参数列表
string-- 这是指向一个字符数组的指针，该数组存储了 C 字符串。
format-- 这是字符串，包含了要被写入到字符串 str 的文本。它可以包含嵌入的 format 标签，format 标签可被随后的附加参数中指定的值替换，并按需求进行格式化。format 标签属性是%[flags][width][.precision][length]specifier
[argument]...：根据不同的 format 字符串，函数可能需要一系列的附加参数，每个参数包含了一个要被插入的值，替换了 format 参数中指定的每个 % 标签。参数的个数应与 % 标签的个数相同。

功能
把格式化的数据写入某个字符串缓冲区。
返回值
如果成功，则返回写入的字符总数，不包括字符串追加在字符串末尾的空字符。如果失败，则返回一个负数。
sprintf 返回以format为格式argument为内容组成的结果被写入string的字节数，结束字符‘\0’不计入内。即，如果“Hello”被写入空间足够大的string后，函数sprintf 返回5。

format标签属性
format 标签属性是%[flags][width][.precision][length]specifier，具体讲解如下： [3] 
sprintf格式的规格如下所示。[]中的部分是可选的。
%[指定参数][标识符][宽度][.精度]指示符
1. [指定参数] 处理字符方向。负号时表示从后向前处理。
2. [标识符] 填空字元。 0 的话表示空格填 0；空格是内定值，表示空格就放着。
3. [宽度]字符总宽度。为最小宽度。
4. [精度] 精确度。指在小数点后的浮点数位数。
5, 转换字符
%% 印出百分比符号，不转换。
%c 字符输出到缓冲区，不转换。
%d 整数转成十进位。
%f 倍精确度数字转成浮点数。
%o 整数转成八进位。
%s 字符串输出到缓冲区，不转换。
%x 整数转成小写十六进位。
%X 整数转成大写十六进位。

%08.2f 解释:
%开始符；
0是 "填空字元" 表示,如果长度不足时就用0来填满；
8格式化后总长度；
2f小数位长度，即2位；
第3行值为"00123.10" 解释:
因为2f是(2位)+小数点符号(1位)+前面123(3位)=6位，总长度为8位,故前面用[填空字元]0表示，即00123.10
第4行值为"123.1000" 解释:
-号为反向操作，然后填空字元0添加在最后面了

money = 123.1
formatted = sprintf ("%06.2f", $money); // 此时变数 $ formatted 值为 "123.10"
formatted = sprintf ("%08.2f", $money); // 此时变数 $ formatted 值为 "00123.10"
formatted = sprintf ("%-08.2f", $money); // 此时变数 $ formatted 值为 "123.1000"

格式化数字字符串sprintf 最常见的应用之一莫过于把整数打印到字符串中，所以，sprintf 在大多数场合可以替代itoa。