C语言函数strlcpy,BSD的自定义函数，是更加安全版本的strcpy函数，在已知目的地址空间大小的情况下，把从src地址开始且含有'\0'结束符的字符串复

size_t strlcpy(char *dest, const char *src, size_t size)
#include <string.h>
返回值：src字符串的大小

strlcpy函数创建的目的主要是针对strcpy函数缓冲区溢出的问题，因为一旦strcpy调用中src的字符串长度超过了dst的缓冲区大小，就会造成缓冲区安全漏洞问题

与strncpy区别
类似的函数还有strncpy，但是strlcpy常常是更加安全地选择，因为strlcpy在复制之后dst字符串一定会以'\0'字符结尾

#include <string.h>
#include <stdio.h>
int main()
{
    char buf[5];
    char src[10] = "12345678";
    strlcpy(buf, src, sizeof(buf));
    printf("%s\n",buf);//输出1234
    return 0;
}
buf字符串最终结果是“1234\0”，以结束字符结尾


#include <string.h>
#include <stdio.h>
int main()
{
    char buf[5];
    char src[10] = "12345678";
    strncpy(buf, src, sizeof(buf));
    printf("%s\n",buf);
    return 0;
}
这个时候buf最终结果就是"12345"，并没有以结束字符结尾。
