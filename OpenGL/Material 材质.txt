材质 = 决定物体“看起来像什么”的属性
几何 (Geometry)：定义了物体的形状（顶点、三角形网格）。
材质 (Material)：定义了光照打到物体上时，表面如何与光相互作用，从而决定了物体的 颜色、亮度、光泽、透明度 等效果。
纹理 (Texture)：经常和材质一起出现，它是材质的“输入数据”（例如一张木头图片贴在桌子材质上）。


所以：形状决定“它是什么”，材质决定“它看起来像什么”。


材质包含的常见属性
在图形学（OpenGL、Metal、Unity、Unreal）里，一个材质通常包括：
Diffuse / BaseColor（漫反射/基础色）：物体的主要颜色（比如红色球体就是靠这个）。
Specular（高光反射）：光在表面上的镜面反射，比如金属球的闪亮部分。
Shininess / Roughness（光滑度/粗糙度）：表面越光滑，高光越小越亮；表面越粗糙，高光越散。
Metalness（金属度）：PBR（基于物理的渲染）常用，决定材质更像金属还是非金属。
Transparency / Opacity（透明度/不透明度）：玻璃 vs 石头。
Normal map / Bump map（法线/凹凸贴图）：模拟表面细节，让平面看起来凹凸不平。
Emission（自发光）：比如灯泡或者霓虹牌的发光。


想象一个 雕塑：
几何 (Geometry)：石膏模型的形状。
材质 (Material)：给它涂上青铜、木头、玻璃，马上外观就完全不同。
纹理 (Texture)：青铜上的锈迹、木头的木纹、玻璃上的贴纸。
材质是让“抽象的形状”变成“看起来真实的东西”的关键。


在渲染管线中的位置
在 光栅化渲染（OpenGL/Metal/DirectX） 里，材质的属性会传给 片元着色器 (Fragment Shader)，用于计算每个像素的颜色。
在 PBR 渲染 里，材质定义的是物理参数（反射率、粗糙度等），然后着色器用物理模型（比如 Cook-Torrance）来模拟光的行为。
在 路径追踪（Ray Tracing） 里，材质决定光线打到表面时，是吸收、反射、折射，还是散射。


材质 (Materials) 是渲染中定义物体表面与光交互规则的参数集合，它让几何形状变得真实、有质感。