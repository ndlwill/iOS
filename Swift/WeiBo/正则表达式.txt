字符串匹配
自己写一个规则，检查传入的字符串符不符合这个规则

使用场景：
1.判断是否是电话号码
2.用户注册登录
3.图文混排

常用正则表达式:http://www.cnblogs.com/zxin/archive/2013/01/26/2877765.html

NSRegularExpressionCaseInsensitive             = 1 << 0,     忽略大小写
NSRegularExpressionAllowCommentsAndWhitespace  = 1 << 1,     忽略空白字符，以及前缀是 # 开始的注释
NSRegularExpressionIgnoreMetacharacters        = 1 << 2,     将整个匹配方案作为文字字符串
NSRegularExpressionDotMatchesLineSeparators    = 1 << 3,     允许 . 匹配任意字符，包括回车换行
NSRegularExpressionAnchorsMatchLines           = 1 << 4,     允许 ^ 和 $ 匹配多行文本的开始和结尾
NSRegularExpressionUseUnixLineSeparators       = 1 << 5,     仅将 \n 作为换行符
NSRegularExpressionUseUnicodeWordBoundaries    = 1 << 6      使用 Unicode TR#29 指定单词边界


包含一个a~z,后面必须是0~9 -->[a-z][0-9]或者[a-z]\d
不能是数字     [^0-9]

url正则:"http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&=]*)?"

QQ匹配:^[1-9]\\d{4,11}$
1.都是数字
2.5~12位

手机号码匹配^1[3578]\\d{9}$    swift中\有特殊含义 \\d就是\d第一个\是转意符
1.以13/15/17/18
2.长度是11

[笑cry]表情匹配    "\\[.*?\\]"    *?表示一个或者多个

匹配@名字:   "@.*?:"

匹配话题#...#   "#.*?#"



规则：
{1,10}   有1位到10位
{0，}    有0位或无限多位


0>	匹配
--------------------------------------------------------------------------------
(pattern)		匹配pattern并获取这一匹配，所获取的匹配可以从产生的Matches集合得到

1>	常用元字符
--------------------------------------------------------------------------------
.			匹配除换行符以外的任意字符
\w			匹配字母或数字或下划线或汉字
\s			匹配任意的空白符（空格、TAB\t、回车\r \n）
\d			匹配数字


^			匹配字符串的开始
$			匹配字符串的结束
\b			匹配单词的开始或结束

2>	常用反义符
--------------------------------------------------------------------------------
\W		匹配任意不是字母，数字，下划线，汉字的字符
\S			匹配任意不是空白符的字符
\D			匹配任意非数字的字符


\B			匹配不是单词开头或结束的位置
[^x]		匹配除了x以外的任意字符
[^aeiou]	匹配除了aeiou这几个字母以外的任意字符

3>	集合
--------------------------------------------------------------------------------
[xyz]		字符集合
[^xyz]		负值字符集合
[a-z]		字符范围
[^a-z]		负值字符范围

4>	常用限定符
--------------------------------------------------------------------------------
*			重复零次或更多次
+			重复一次或更多次
?			重复零次或一次
{n}			重复n次
{n,}		重复n次或更多次
{n,m}		重复n到m次

5>	贪婪和懒惰
--------------------------------------------------------------------------------
*?			重复任意次，但尽可能少重复
*+			重复1次或更多次，但尽可能少重复
??			重复0次或1次，但尽可能少重复
{n,m}?	重复n到m次，但尽可能少重复
{n,}?		重复n次以上，但尽可能少重复