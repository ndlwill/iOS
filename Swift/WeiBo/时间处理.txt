// 处理来源  空字符串检查
if let sourceStr: NSString = status.source where sourceStr != ""
{
    // 6.1获取从什么地方开始截取
    let startIndex = sourceStr.rangeOfString(">").location + 1
    // 6.2获取截取多长的长度
    let length = sourceStr.rangeOfString("<", options: NSStringCompareOptions.BackwardsSearch).location - startIndex
    
    // 6.3截取字符串
    let rest = sourceStr.substringWithRange(NSMakeRange(startIndex, length))
    
    source_Text = "来自: " + rest
}


extension NSDate
{
    /// 根据一个字符串创建一个NSDate
    class func createDate(timeStr: String, formatterStr: String) -> NSDate
    {
        let formatter = NSDateFormatter()
        formatter.dateFormat = formatterStr
        // 如果不指定以下代码, 在真机中可能无法转换
        formatter.locale = NSLocale(localeIdentifier: "en")
        return formatter.dateFromString(timeStr)!
    }
    /**
     刚刚(一分钟内)
     X分钟前(一小时内)
     X小时前(当天)
     
     昨天 HH:mm(昨天)
     
     MM-dd HH:mm(一年内)
     yyyy-MM-dd HH:mm(更早期)
     */
    /// 生成当前时间对应的字符串
    func descriptionStr() -> String
    {
        // 1.创建时间格式化对象
        let formatter = NSDateFormatter()
        formatter.locale = NSLocale(localeIdentifier: "en")
        
        // 2.创建一个日历类
        let calendar = NSCalendar.currentCalendar()
        
        // 3.定义变量记录时间格式
        var formatterStr = "HH:mm"
        
        // 4.判断是否是今天
        if calendar.isDateInToday(self)
        {
            // 今天
            // 3.比较两个时间之间的差值
            let interval = Int(NSDate().timeIntervalSinceDate(self))
            
            if interval < 60
            {
                return "刚刚"
            }else if interval < 60 * 60
            {
                return "\(interval / 60)分钟前"
            }else if interval < 60 * 60 * 24
            {
                return "\(interval / (60 * 60))小时前"
            }
        }else if calendar.isDateInYesterday(self)
        {
            // 昨天
            formatterStr = "昨天 " + formatterStr
        }else
        {
            // 该方法可以获取两个时间之间的差值
            let comps  = calendar.components(NSCalendarUnit.Year, fromDate: self, toDate: NSDate(), options: NSCalendarOptions(rawValue: 0))
            if comps.year >= 1
            {
                // 更早时间
                formatterStr = "yyyy-MM-dd " + formatterStr
            }else
            {
                // 一年以内
                formatterStr = "MM-dd " + formatterStr
            }
        }
        formatter.dateFormat = formatterStr
        return formatter.stringFromDate(self)
    }
}
