https://www.donnywals.com/wrapping-existing-asynchronous-code-in-async-await-in-swift/



#if DEBUG
func withSmartContinuation<T>(
    _ body: @escaping (CheckedContinuation<T, Never>) -> Void
) async -> T {
    return await withCheckedContinuation { continuation in
        body(continuation)
    }
}
#else
func withSmartContinuation<T>(
    _ body: @escaping (UnsafeContinuation<T, Never>) -> Void
) async -> T {
    return await withUnsafeContinuation { continuation in
        body(continuation)
    }
}
#endif