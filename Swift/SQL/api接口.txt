核心对象
database_connection
由 sqlite3_open 函数创建并返回
在使用其他 SQLite 接口函数之前，必须先获得database_connnection对象

prepared_statement
可以简单的将它视为编译后的SQL语句



核心接口
sqlite3_open
可以打开已经存在的数据库文件
如果数据库不存在，可以创建新的数据库文件
返回的 database_connection 对象是其他 SQLite APIs 的句柄参数
可以在多个线程之间共享该对象指针

sqlite3_prepare
将 SQL 文本转换为 prepared_statement 对象
不会执行指定的 SQL 语句
只是将 SQL 文本初始化为待执行的状态

sqlite3_step
执行一次 sqlite3_prepare 函数返回的 prepared_statement 对象
执行完该函数后，prepared_statement 对象的内部指针将指向其返回结果集的第一行
如果要获得后续的数据行，则需要不断地调用该函数，直到所有的数据行遍历完毕
对于 INSERT、UPDATE 和 DELETE 等 DML 语句，执行一次即可完成

sqlite3_column
用于获取当前行指定列的数据
以下函数分别对应不同的数据类型
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_bytes16
sqlite3_column_double
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_text16
sqlite3_column_type
sqlite3_column_value
sqlite3_column_count
用于获取当前结果集中的字段数量

sqlite3_finalize
销毁 prepared_statement 对象，否则会造成内存泄露

sqlite3_close
关闭之前打开的 database_connection 对象
所有和该对象相关的 prepared_statements 对象都必须在此之前被销毁