https://developer.apple.com/documentation/swiftui/app

A type that represents the structure and behavior of an app.
iOS14.0
protocol App

A type that represents the structure and behavior of an app.
@main
struct MyApp: App {
    var body: some Scene {
        WindowGroup {
            Text("Hello, world!")
        }
    }
}

Precede the structure’s declaration with the @main attribute to indicate that your custom App protocol conformer provides the entry point into your app. 
The protocol provides a default implementation of the main() method that the system calls to launch your app. 
You can have exactly one entry point among all of your app’s files.

Compose the app’s body from instances that conform to the Scene protocol.
Each scene contains the root view of a view hierarchy and has a life cycle managed by the system.
SwiftUI provides some concrete scene types to handle common scenarios, like for displaying documents or settings. 
You can also create custom scenes.

@main
struct Mail: App {
    var body: some Scene {
        WindowGroup {
            MailViewer()
        }
        Settings {
            SettingsView()
        }
    }
}

You can declare state in your app to share across all of its scenes.
For example, you can use the StateObject attribute to initialize a data model, 
and then provide that model on a view input as an ObservedObject or through the environment as an EnvironmentObject to scenes in the app:

@main
struct Mail: App {
    @StateObject private var model = MailModel()


    var body: some Scene {
        WindowGroup {
            MailViewer()
                .environmentObject(model) // Passed through the environment.
        }
        Settings {
            SettingsView(model: model) // Passed as an observed object.
        }
    }
}