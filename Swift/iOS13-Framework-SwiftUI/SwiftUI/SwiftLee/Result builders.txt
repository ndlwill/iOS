https://www.avanderlee.com/swift/result-builders/

#####
Result builders in Swift allow you to build up a result using ‘build blocks’ lined up after each other. // Swift 中的结果构建器允许您使用一个接一个排列的“构建块”来构建结果
They were introduced in Swift 5.4 and are available in Xcode 12.5 and up.
Formerly known as function builders, you’ve probably already used them quite a bit by building a stack of views in SwiftUI.
#####


==================================================What are result builders?
#####
A result builder can be seen as an embedded domain-specific language (DSL) for collecting parts that get combined into a final result.
A simple SwiftUI view declaration uses a @ViewBuilder under the hood which is an implementation of a result builder: // 简单的 SwiftUI 视图声明在底层使用 @ViewBuilder，它是结果构建器的实现
#####

struct ContentView: View {
    var body: some View {
        // This is inside a result builder
        VStack {
            Text("Hello World!") // VStack and Text are 'build blocks'
        }
    }
}

#####
Each child view, in this case a VStack containing a Text, will be combined into a single View. // 每个子视图（在本例中为包含文本的 VStack）将被组合成单个视图
In other words, the View building blocks are built into a View result.
This is important to understand as it explains how result builders work.
#####

If we look into the declaration of the SwiftUI View protocol we can see the body variable being defined using the @ViewBuilder attribute:
@ViewBuilder var body: Self.Body { get }

This is exactly how you can use your custom result builder as an attribute of function, variable, or subscript.


==================================================Creating a custom result builder