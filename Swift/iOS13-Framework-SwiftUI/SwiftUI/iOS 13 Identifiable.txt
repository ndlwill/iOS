Identifiable 是 Swift 标准库里的一个协议，在 SwiftUI 和 集合操作里非常常用。

public protocol Identifiable {
    associatedtype ID: Hashable
    var id: ID { get }
}
任何符合 Identifiable 的类型必须提供一个 唯一标识符 id


SwiftUI 的 List、ForEach 等容器需要区分每个元素，否则它不知道哪些数据是“同一个”，更新时就会乱掉。


系统内建类型的支持
UUID、Int、String 等都可以直接用来当 id。
SwiftUI 中像 Text、Image 这些视图也自动实现了 Identifiable，所以可以放在 ForEach 里。


如果你的模型本身就是 Hashable，可以用自己 当 id：
struct Tag: Identifiable, Hashable {
    let name: String
    var id: Self { self } // 表示“这个对象自己就是它的唯一标识符”
}
protocol Identifiable {
    associatedtype ID: Hashable
    var id: ID { get }
}
Swift 5.7 开始，协议的 associatedtype 要求如果和自身一致，可以用 Self 这种写法。
这是 Swift 引入的 KeyPath to Self 特性，用来表达「标识就是这个对象自己」。


标准 Swift 常用的是 \.self（key path 语法）