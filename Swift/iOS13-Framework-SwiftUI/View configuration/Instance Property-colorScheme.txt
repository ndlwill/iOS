Instance Property
colorScheme
The color scheme of this environment.

iOS13.0
var colorScheme: ColorScheme { get set }

Read this environment value from within a view to find out if SwiftUI is currently displaying the view using the ColorScheme.light or ColorScheme.dark appearance.
The value that you receive depends on whether the user has enabled Dark Mode, possibly superseded by the configuration of the current presentation’s view hierarchy.

@Environment(\.colorScheme) private var colorScheme
var body: some View {
    Text(colorScheme == .dark ? "Dark" : "Light")
}

You can set the colorScheme environment value directly, but that usually isn’t what you want.
Doing so changes the color scheme of the given view and its child views but not the views above it in the view hierarchy.
Instead, set a color scheme using the preferredColorScheme(_:) modifier, which also propagates the value up through the view hierarchy to the enclosing presentation, like a sheet or a window.

When adjusting your app’s user interface to match the color scheme, consider also checking the colorSchemeContrast property, which reflects a system-wide contrast setting that the user controls.

Note:
If you only need to provide different colors or images for different color scheme and contrast settings, do that in your app’s Asset Catalog. 