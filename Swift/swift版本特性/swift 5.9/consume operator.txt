consume operator to end the lifetime of a variable binding

struct User {
    var name: String
}

func createUser() {
    let newUser = User(name: "Anonymous")
    let userCopy = consume newUser
    print(userCopy.name)
    print(newUser.name)// error: 'newUser' used after consume
}

let userCopy 这行,它同时做了两件事:
将值从 newUser 复制到 userCopy。
终结 newUser 的生命周期, 因此任何进一步尝试访问它都会抛出错误。


更常见的做法是，使用 _ = consume newUser
不想复制数据,只是想将其标记为已销毁


// 这个可以
func createThenRecreate() {
    var user = User1(name: "Roy Kent")
    _ = consume user

    user = User1(name: "Jamie Tartt")
    print(user.name)
}


