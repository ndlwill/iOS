"Protocol Conformance" 中文一般翻译为：
协议遵循 或 协议一致性

它表示：某个类型实现了一个协议中定义的所有要求（属性、方法、关联类型等），并声明自己遵循这个协议。

定义一个协议：
protocol Drawable {
    func draw()
}

一个类型**遵循（conform）**这个协议：
struct Circle: Drawable {
    func draw() {
        print("Drawing a circle")
    }
}

这时候我们说：
🔹 Circle conforms to Drawable protocol
🔹 Circle 类型具有 Protocol Conformance to Drawable


协议遵循的意义:
协议是一种 抽象规范
你可以写依赖协议的代码，而不是依赖具体类型

func render(shape: Drawable) {
    shape.draw()
}

let c = Circle()
render(shape: c)  // ✅ 因为 Circle 遵循了 Drawable 协议


Swift 的协议遵循还有很多高级特性：
特性名	举例
✅ 类遵循协议	class Car: Driveable { ... }
✅ 泛型约束协议遵循	func printAll<T: CustomStringConvertible>(_ list: [T])
✅ 协议继承协议	protocol Animal: LivingThing {}
✅ 协议扩展	extension Drawable { func defaultDraw() { ... } }
✅ associatedtype	protocol Stack { associatedtype Element }


Protocol Conformance = 类型承诺去实现协议中定义的接口，Swift 会强制检查是否真正实现了这些接口。