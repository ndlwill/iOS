数组（Array）是一串有序的由相同类型元素构成的集合
数组中的集合元素是有序的，可以重复出现
Swift中的数组
swift字典类型是Array，是一个泛型(对类型进行限制)集合

数组分成:可变数组和不可变数组
使用let修饰的数组是不可变数组
使用var修饰的数组是可变数组

// 定义一个可变数组,必须初始化才能使用
var array1 : [String] = [String]() // 空数组
// 定义一个不可变数组
let array2 : [NSObject] = ["why", 18]


以下实例创建了一个类型为 Int ，数量为 3，初始值为 0 的空数组：
var someInts = [Int](repeating: 0, count: 3)

在声明一个Array类型的时候可以使用下列的语句之一
var stuArray1:Array<String>
var stuArray2: [String]


声明的数组需要进行初始化才能使用，数组类型往往是在声明的同时进行初始化的
// 定义时直接初始化
var array = ["why", "lnj", "lmj"]

var names : [String] = Array()
var names : [String] = [String]()

// 先定义,后初始化
var array : Array<String>
array = ["why", "lnj", "lmj"]

//可以用AnyObject代替NSObject 表示任意类型
//var arrsys : [NSObject] = [NSObject]();
var arrsys : [AnyObject] = [AnyObject]();
arrays.append("yz")
arrays.append(18)

你可以使用 append() 方法或者赋值运算符 += 在数组末尾添加元素
someInts.append(30)
someInts += [40]

// 添加数据
array.append("yz")
// 删除元素
array.removeFirst()
// 修改元素
array[0] = "why"
// 取值
array[1]


如果我们同时需要每个数据项的值和索引值，可以使用 String 的 enumerate() 方法来进行数组遍历
var someStrs = [String]()
someStrs.append("Apple")
someStrs.append("Amazon")
someStrs.append("Runoob")
someStrs += ["Google"]
for (index, item) in someStrs.enumerated() {
    print("在 index = \(index) 位置上的值为 \(item)")
}

数组的遍历

// 遍历数组
for i in 0..<array.count {
    print(array[i])
}

// forin方式
for item in array {
    print(item)
}

// 设置遍历的区间
for item in array[0..<2] {
    print(item)
}

// 数组合并
// 注意:相同类型的数组合并
var array = ["why", "lmj","lnj"]
var array1 = ["yz", "wsz"]
var array2 = array + array1;

var array3 = [2, 3, "why"]
var array4 = ["yz", 23]
array3 + array4

不同类型的数组合并通过遍历添加到一个可变的AnyObject数组

isEmpty 来判断数组是否为空
