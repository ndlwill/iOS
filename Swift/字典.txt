Swift 字典用来存储无序的相同类型数据的集合

字典是由两部分集合构成的，一个是键（key）集合，一个是值（value）集合
键集合是不能有重复元素的，而值集合是可以重复的，键和值是成对出现的
Swift中的字典
Swift字典类型是Dictionary，也是一个泛型集合


Swift中的可变和不可变字典
使用let修饰的数组是不可变数组
使用var修饰的数组是可变数组

var someDict = [Int: String]() // 空字典

// 定义一个可变字典
var dict1 : [String : NSObject] = [String : NSObject]()
// 定义一个不可变字典
let dict2 = ["name" : "why", "age" : 18]


在声明一个Dictionary类型的时候可以使用下面的语句之一
var dict1 : Dictionary<Int, String>
var dict2 : [Int: String]


声明的字典需要进行初始化才能使用，字典类型往往是在声明的同时进行初始化的
// 定时字典的同时,进行初始化
var dict = ["name" : "why", "age" : 18]

// swift中任意对象,通常不使用NSObject,使用AnyObject
var dict : Dictionary<String, AnyObject>
dict = ["name" : "why", "age" : 18]


// 添加数据
dict["height"] = 1.88
dict["weight"] = 70.0

// 删除字段
dict.removeValueForKey("height")  //会返回删除的元素
也可以通过指定键的值为 nil 来移除 key-value（键-值）对

// 修改字典
dict["name"] = "lmj"

// 查询字典
dict["name"]

// 增加或更新字典的内容。如果 key 不存在，则添加值，如果存在则修改 key 对应的值 - 方法返回Optional值
var someDict:[Int:String] = [1:"One", 2:"Two", 3:"Three"]
var oldVal = someDict.updateValue("One 新的值", forKey: 1)



var someDict:[Int:String] = [1:"One", 2:"Two", 3:"Three"]
let dictKeys = [Int](someDict.keys)
let dictValues = [String](someDict.values)


字典的遍历
// 遍历字典中所有的值
for value in dict.values {
    print(value)
}
// 遍历字典中所有的键
for key in dict.keys {
    print(key)
}

// 遍历所有的键值对
for (key, value) in dict {
    print(key)
    print(value)
}

var someDict:[Int:String] = [1:"One", 2:"Two", 3:"Three"]
for (key, value) in someDict.enumerated() {
    print("字典 key \(key) -  字典 (key, value) 对 \(value)")
}


// 字典的合并
var dict1 = ["name" : "yz", "age" : 20]
var dict2 = ["height" : 1.87, "phoneNum" : "+86 110"]
// 字典不可以相加合并
for (key, value) in dict1 {
    dict2[key] = value
}