SwiftUI has lots of ways to create rounded rectangles but what if you want to match the corner radius of a widget? Apple added ContainerRelativeShape to iOS 14 for that purpose.

https://developer.apple.com/design/human-interface-guidelines/components/system-experiences/widgets/
To ensure that your content looks good within a widgetâ€™s rounded corners, use a SwiftUI container to apply the correct corner radius.

Text("Hello World!")
  .font(.title)
  .padding()
  .background(ContainerRelativeShape()
                .fill(Color.yellow))

ZStack {
  ContainerRelativeShape()
    .inset(by: 8)
    .fill(Color.yellow)
  
  Text("Hello World!")
    .font(.title)
    .padding()
}

ZStack {
  Color(.systemBlue)
  
  ContainerRelativeShape()
    .inset(by: 8)
    .fill(Color.yellow)
  
  Text("Hello World!")
    .font(.title)
    .padding()
}

Note that the corner radius decreases as I increase the inset moving the shape further from the edges of the Widget


Clip Shape:
You can use the container relative shape to clip an image. This works well to give an image filling the widget an even border
ZStack {
  Color(.systemBlue)
  
  Image("atom")
    .resizable()
    .clipShape(ContainerRelativeShape()
               .inset(by: 8))
}